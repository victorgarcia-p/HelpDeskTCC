<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>Aplique a Hubs e métodos Hub para autorizar conexões do cliente a Hubs e autorizar invocações do cliente de métodos Hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>Especifica se deve-se aplicar a autorização apenas para as invocações de qualquer um dos métodos do lado do servidor de Hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Determina se o cliente está autorizado a conectar-se ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>verdadeira se o chamador estiver autorizado a conectar-se ao hub; caso contrário, falso.</returns>
      <param name="hubDescriptor">A descrição do hub a que o cliente está tentando se conectar.</param>
      <param name="request">A solicitação de (re)conexão vinda do cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Determina se o cliente está autorizado a invocar o método <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>verdade se o chamador estiver autorizado a invocar o método <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />; caso contrário, falso.</returns>
      <param name="hubIncomingInvokerContext">Um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> fornecendo detalhes a respeito da invocação de método do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">verdadeiro para indicar que a instância da interface é um atributo aplicado diretamente ao método; caso contrário, falso.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>Defina como false para aplicar a autorização apenas para as invocações de qualquer um dos métodos do lado do servidor de Hub.Essa propriedade afeta apenas atributos aplicados à classe Hub.Esta propriedade não pode ser lida.</summary>
      <returns>falso se a autorização deve ser aplicada somente a invocações de qualquer um dos métodos de servidor lateral do Hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>Obtém ou define as funções de usuário.</summary>
      <returns>As funções de usuário.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>Quando substituído, fornece um ponto de entrada para verificações de autorização personalizadas.Chamado por <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> e <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" />.</summary>
      <returns>verdadeiro se o usuário estiver autorizado; caso contrário, falso.</returns>
      <param name="user">O <see cref="T:System.Security.Principal.IPrincipal" /> para o cliente que está sendo autorizado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>Obtém ou define os usuários autorizados.</summary>
      <returns>Os usuários autorizados.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>Representa uma configuração de conexão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>Obtém ou define um booleano que determina se JSONP está ativado.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>Obtém ou define o resolvedor de dependência a usar com a conexão de hub.</summary>
      <returns>O resolvedor de dependência a usar com a conexão de hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>Fornece métodos de extensão usados para enviar mensagens a todas as conexões que são inscritas no sinal específico.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>Transmite um valor para todas as conexões, excluindo as IDs de conexão especificadas.</summary>
      <returns>Uma tarefa que representa quando a transmissão está concluída.</returns>
      <param name="connection">A conexão.</param>
      <param name="value">O valor a ser transmitido.</param>
      <param name="excludeConnectionIds">Uma lista de IDs de conexão a excluir na transmissão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>Envia uma mensagem para todas as conexões inscritas para o sinal especificado.Um exemplo de sinal pode ser uma ID de conexão específica.</summary>
      <returns>Uma tarefa que representa quando a transmissão está concluída.</returns>
      <param name="connection">A conexão</param>
      <param name="connectionIds">As IDs de conexão às quais enviar.</param>
      <param name="value">O valor a ser publicado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>Envia uma mensagem para todas as conexões inscritas para o sinal especificado.Um exemplo de sinal pode ser uma ID de conexão específica.</summary>
      <returns>Uma tarefa que representa quando a transmissão está concluída.</returns>
      <param name="connection">A conexão</param>
      <param name="connectionId">O connectionId ao qual enviar.</param>
      <param name="value">O valor a ser publicado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>Uma mensagem enviada para uma ou mais conexões.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">O sinal.</param>
      <param name="value">A carga da mensagem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">O sinal.</param>
      <param name="value">A carga da mensagem.</param>
      <param name="excludedSignals">Os sinais a excluir.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>Representa uma lista de sinais que deve ser usada para filtrar quais conexões recebem essa mensagem.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IList`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>O sinal para o qual essa mensagem deve ser enviada.Conexões inscritas para esse sinal receberão a carga da mensagem.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>Uma lista de sinais aos quais essa mensagem deve ser entregue.Se ela for usada, o sinal não pode ser utilizado.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>A carga da mensagem.</summary>
      <returns>Retorna <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>Representa o cookie do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">O nome da propriedade do cookie.</param>
      <param name="value">O valor da propriedade do cookie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">O nome da propriedade do cookie.</param>
      <param name="value">O valor da propriedade do cookie.</param>
      <param name="domain">A propriedade do domínio do cookie.</param>
      <param name="path">O caminho da propriedade do cookie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>Obtém ou define o domínio do cookie.</summary>
      <returns>O domínio do cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>Obtém ou define o nome do cookie.</summary>
      <returns>O nome do cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>Obtém ou define o caminho do cookie.</summary>
      <returns>O caminho do cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>Obtém ou define o valor do cookie.</summary>
      <returns>O valor do cookie.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>Representa um resolvedor de dependência com comportamento padrão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>Libera os recursos usados ​​pela instância atual da classe <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela instância atual da classe <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>Resolve serviços registrados isoladamente que dão suporte à criação do objeto arbitrário.</summary>
      <returns>O objeto ou serviço solicitado.</returns>
      <param name="serviceType">O tipo do objeto ou serviço solicitado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>Resolve serviços registrados de multiplicação.</summary>
      <returns>Os serviços solicitados.</returns>
      <param name="serviceType">O tipo dos serviços solicitados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registra os serviços especificados para o resolvedor de dependência.</summary>
      <param name="serviceType">O tipo dos serviços a serem registrados.</param>
      <param name="activators">Os serviços a serem registrados para o resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registra o serviço especificado para o resolvedor de dependência.</summary>
      <param name="serviceType">O tipo do serviço a ser registrado.</param>
      <param name="activator">O serviço a ser registrado para o resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Resolve o tipo das extensões.</summary>
      <returns>Retorna  um objeto para resolver o tipo das extensões.</returns>
      <param name="resolver">O resolvedor de dependência.</param>
      <typeparam name="T">O tipo a resolver.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Resolve o tipo das extensões.</summary>
      <returns>Retorna  um objeto para resolver o tipo das extensões.</returns>
      <param name="resolver">O resolvedor de dependência.</param>
      <param name="type">O tipo a resolver.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Resolve todos os tipos de extensões.</summary>
      <returns>Retorna uma coleção de extensões de tipos resolvidos.</returns>
      <param name="resolver">O resolvedor de dependência.</param>
      <typeparam name="T">O tipo a resolver.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Resolve todos os tipos de extensões.</summary>
      <returns>Retorna uma coleção de extensões de tipos resolvidos.</returns>
      <param name="resolver">O resolvedor de dependência.</param>
      <param name="type">O tipo a resolver.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>Fornece acesso às informações de host padrão.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" /> padrão.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" /> padrão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> padrão.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> padrão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>Obtém ou define o <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> padrão.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> padrão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> padrão.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> padrão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" /> padrão.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>Gerencia grupos para uma conexão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.GroupManager" />.</summary>
      <param name="connection">A <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> em que esse grupo reside.</param>
      <param name="groupPrefix">O prefixo desse grupo.Um nome de <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> ou nome de tipo <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>Adiciona uma conexão ao grupo especificado.</summary>
      <returns>Uma tarefa que representa a ID de conexão que está sendo adicionada ao grupo.</returns>
      <param name="connectionId">A ID de conexão a adicionar ao grupo.</param>
      <param name="groupName">O nome do grupo</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>Remove uma conexão do grupo especificado.</summary>
      <returns>Uma tarefa que representa a ID de conexão que está sendo removida do grupo.</returns>
      <param name="connectionId">A ID de conexão a remover do grupo.</param>
      <param name="groupName">O nome do grupo</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Envia um valor ao grupo especificado.</summary>
      <returns>Uma tarefa que representa quando o envio está concluído.</returns>
      <param name="groupNames">Os nomes dos grupos.</param>
      <param name="value">O valor a ser enviado.</param>
      <param name="excludeConnectionIds">Uma lista de ids de conexão a excluir</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Envia um valor ao grupo especificado.</summary>
      <returns>Uma tarefa que representa quando o envio está concluído.</returns>
      <param name="groupName">O nome do grupo.</param>
      <param name="value">O valor a ser enviado.</param>
      <param name="excludeConnectionIds">Uma lista de ids de conexão a excluir.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>Fornece métodos que se comunicam com conexões do SignalR conectadas a um <see cref="T:Microsoft.AspNet.SignalR.Hub" /> .</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>Obtém ou define os clientes que se comunicam com conexões SignalR.</summary>
      <returns>Os clientes que se comunicam com conexões SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>Obtém ou define informações sobre o cliente da chamada.</summary>
      <returns>As informações sobre o cliente da chamada.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>Libera todos os recursos usados por esta instância .</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>Libera todos os recursos usados por esta instância .</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>Obtém ou define o gerenciador de grupo para essa instância do hub.</summary>
      <returns>O gerenciador de grupo para essa instância do hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>Ocorre quando a conexão se estabelece para essa instância do hub.</summary>
      <returns>O resultado da operação.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>Ocorre quando a conexão é desconectada dessa instância do hub.</summary>
      <returns>O resultado da operação.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>Ocorre quando a conexão se restabelece para essa instância do hub.</summary>
      <returns>O resultado da operação.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>Representa uma configuração de hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>Determina se exceções detalhadas lançadas em métodos Hub são reportadas de volta ao cliente invocado.O padrão é falso.</summary>
      <returns>verdadeiro se as exceções detalhadas lançadas nos métodos Hub forem reportadas de volta ao cliente que invoca; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>Determina se os proxies JavaScript para os hubs do lado do servidor devem ser autogerados em {Caminho}/hubs.O padrão é verdadeiro.</summary>
      <returns>verdadeiro se os proxies de JavaScript para os hubs de servidor lateral devessem ser autogerados em {Path}/hubs; caso contrário, falso.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>Fornece métodos de extensão para adicionar funcionalidade personalizada aos tipos de dados.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>A exigência de autenticação adiciona um <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> ao<see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> com autorizadores <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" /> e <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" /> que serão aplicados globalmente a todos os hubs e métodos de hub.Estes autorizadores requerem que o <see cref="T:System.Security.Principal.IIdentity" /> do <see cref="T:System.Security.Principal.IPrincipal" /> esteja IsAuthenticated para qualquer cliente que invocar os métodos de hub do lado do servidor ou receber invocações de método de hub do lado do cliente.</summary>
      <param name="pipeline">O <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> no qual o <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> será adicionado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>Um canal de comunicação para um <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> e suas conexões.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>O sinal principal dessa conexão.Esse é o principal sinal de uma <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Envia uma mensagem para conexões inscritas para o sinal.</summary>
      <returns>Uma tarefa que retorna quando a mensagem foi enviada.</returns>
      <param name="message">A mensagem a ser enviada.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>Gerencia grupos para uma conexão e permite enviar mensagens ao grupo.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Envia um valor aos grupos especificados.</summary>
      <returns>Uma tarefa que representa quando o envio está concluído.</returns>
      <param name="groupNames">Os nomes dos grupos.</param>
      <param name="value">O valor a ser enviado.</param>
      <param name="excludeConnectionIds">Uma lista de ids de conexão a excluir</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Envia um valor ao grupo especificado.</summary>
      <returns>Uma tarefa que representa quando o envio está concluído.</returns>
      <param name="groupName">O nome do grupo.</param>
      <param name="value">O valor a ser enviado.</param>
      <param name="excludeConnectionIds">Lista de IDs de conexão a excluir</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>Fornece uma interface que representa o resolvedor de dependência para SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>Retorna o serviço para o tipo dado.</summary>
      <returns>O serviço retornado.</returns>
      <param name="serviceType">O tipo do serviço a ser retornado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>Retorna os serviços para o tipo dado.</summary>
      <returns>Os serviços retornados.</returns>
      <param name="serviceType">O tipo do serviço a ser retornado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Registra uma lista de serviços para o tipo especificado.</summary>
      <param name="serviceType">O tipo do serviço a ser registrado.</param>
      <param name="activators">Uma lista de delegados de funções que aceita um parâmetro que representa o serviço a ser ativado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Registra um serviço para o tipo especificado.</summary>
      <param name="serviceType">O tipo do serviço a ser registrado.</param>
      <param name="activator">Um delegado de funções que aceita um parâmetro que representa o serviço a ser ativado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>Gerencia grupos para uma conexão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>Adiciona uma conexão ao grupo especificado.</summary>
      <returns>Uma tarefa que representa a ID de conexão que está sendo adicionada ao grupo.</returns>
      <param name="connectionId">A ID de conexão a adicionar ao grupo.</param>
      <param name="groupName">O nome do grupo</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>Remove uma conexão do grupo especificado.</summary>
      <returns>Uma tarefa que representa a ID de conexão que está sendo removida do grupo.</returns>
      <param name="connectionId">A ID de conexão a remover do grupo.</param>
      <param name="groupName">O nome do grupo</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>Fornece acesso às informações sobre uma <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>Encapsula todas as informações sobre uma conexão SignalR para um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>Obtém o hub do <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>Fornece acesso às informações sobre uma <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> .</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> .</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>Representa uma solicitação de SignalR.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>Obtém os cookies para a conexão de cliente.</summary>
      <returns>Os cookies para a conexão de cliente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Obtém o ambiente OWIN.</summary>
      <returns>O ambiente OWIN.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>Obtém ou define os cabeçalhos para a solicitação.</summary>
      <returns>Os cabeçalhos para as solicitações.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>Obtém a parte do caminho local da URL.</summary>
      <returns>A parte do caminho local da URL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>Obtém a coleção de variáveis de cadeia de consulta IRequest.</summary>
      <returns>A coleção de variáveis de cadeia de consulta IRequest.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>Lê o formulário da solicitação HTTP.</summary>
      <returns>O formulário da solicitação HTTP a ser lido.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>Obtém o URI para o IRequest.</summary>
      <returns>O URI para o IRequest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>Obtém o usuário do objeto de segurança para o IRequest.</summary>
      <returns>O usuário do objeto de segurança para o IRequest.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> Representa uma conexão entre cliente e servidor. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>Obtém ou define o manipulador do ACK desta conexão.</summary>
      <returns>O manipulador do ACK desta conexão.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Determina se esta conexão está autorizada.</summary>
      <returns>verdadeiro se a conexão for autorizada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Determina se a solicitação de conexão está autorizada.</summary>
      <returns>verdadeiro se a solicitação de conexão for autorizada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>Obtém ou define a conexão.</summary>
      <returns>A conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>Obtém ou define o gerenciador do contador de desempenho.</summary>
      <returns>O gerenciador do contador de desempenho.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>Retorna os sinais usados na <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> .</summary>
      <returns>Os sinais usados para esta <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="userId">A ID de usuário para a conexão atual.</param>
      <param name="connectionId">A ID de conexão de entrada.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>Obtém ou define os grupos de conexão.</summary>
      <returns>Os grupos de conexão.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>Obtém ou define o serializador JSON.</summary>
      <returns>O serializador JSON.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>Obtém ou define o barramento de mensagem da conexão.</summary>
      <returns>O barramento de mensagem da conexão.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chamado quando uma nova conexão é feita.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que é concluída quando a operação de conectar é concluída.</returns>
      <param name="request">A solicitação para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chamado quando uma conexão é desconectada.</summary>
      <returns>Um <see cref="T:System.Threading.Tasks.Task" /> que é concluído quando a operação de desconexão é concluída.</returns>
      <param name="request">A solicitação para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está desconectado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Chamado quando os dados são recebidos de uma conexão.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que é concluída quando a operação de recebimento é concluída.</returns>
      <param name="request">A solicitação para a conexão atual.</param>
      <param name="connectionId">A ID da conexão que envia os dados.</param>
      <param name="data">A carga enviada para a conexão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chamado quando uma conexão é reconectada, após ter excedido um tempo limite.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que é concluída quando a operação de reconectar é concluída.</returns>
      <param name="request">A solicitação para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Chamado quando ocorre uma reconexão, após exceder um tempo limite, para determinar quais grupos devem ser incluídos novamente.</summary>
      <returns>Um conjunto de nomes de grupo que devem ser incluídos ao reconectar.</returns>
      <param name="request">A solicitação para a conexão atual.</param>
      <param name="groups">Os grupos que a conexão de chamada declara fazer parte.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Trata de todas as solicitações para um <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que é concluída quando o pipeline da <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> é concluído.</returns>
      <param name="context">O <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> para a solicitação atual.</param>
      <exception cref="InvalidOperationException">Descartado se a conexão não foi inicializada.Descartado se o transporte não foi especificado.Descartado se a ID de conexão não foi especificada.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>O ponto de entrada OWIN.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>Obtém ou define os dados protegidos desta conexão.</summary>
      <returns>Os dados protegidos desta conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>Obtém a origem da conexão.</summary>
      <returns>A origem da conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>Obtém ou define o gerenciador do rastreamento.</summary>
      <returns>O gerenciador do rastreamento.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>Obtém ou define o transporte associado a esta conexão.</summary>
      <returns>O transporte associado a esta conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>Fornece acesso ao gerenciador de configuração padrão do servidor.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>Obtém ou define um TimeSpan que representa o período de tempo para manter a conexão aberta antes de ter o tempo excedido.</summary>
      <returns>Um TimeSpan que representa o período de tempo para levar uma conexão aberta antes de ter o tempo excedido.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>Obtém e define o número de mensagens para fazer buffer de um sinal específico.</summary>
      <returns>O número de mensagens para fazer buffer de um sinal específico.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>Obtém ou define um TimeSpan que representa o período de tempo a aguardar após uma conexão ser perdida, antes de gerar um evento de desconexão.</summary>
      <returns>Um TimeSpan que representa o período de tempo a aguardar após uma conexão ser perdida, antes de gerar um evento de desconexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>Obtém ou define um TimeSpan que representa a quantidade de tempo entre enviar mensagens de atividade.Se ativado, este valor deve ser de pelo menos dois segundos.Defina como null para desativar.</summary>
      <returns>Um TimeSpan que representa a quantidade de tempo entre enviar mensagens de atividade.Se ativado, este valor deve ser de pelo menos dois segundos.Defina como null para desativar.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>Fornece acesso à configuração do servidor.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>Obtém ou define um <see cref="T:System.TimeSpan" /> que representa o período de tempo para manter a conexão aberta antes de ter o tempo excedido.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que representa o período de tempo para levar uma conexão aberta antes de ter o tempo excedido.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>Obtém e define o número de mensagens para fazer buffer de um sinal específico.</summary>
      <returns>O número de mensagens para fazer buffer de um sinal específico.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>Obtém ou define um <see cref="T:System.TimeSpan" /> que representa o período de tempo a aguardar após uma conexão ser perdida, antes de gerar um evento de desconexão.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que representa o período de tempo a aguardar após uma conexão ser perdida, antes de gerar um evento de desconexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>Obtém ou define um <see cref="T:System.TimeSpan" /> que representa a quantidade de tempo entre enviar mensagens de atividade.Se ativado, este valor deve ser de pelo menos dois segundos.Defina como null para desativar.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> que representa a quantidade de tempo entre enviar mensagens de atividade.Se ativado, este valor deve ser de pelo menos dois segundos.Defina como null para desativar.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>Obtém ou define um <see cref="T:System.TimeSpan" /> que representa dizer ao cliente para aguardar antes de restabelecer uma conexão de pesquisa longa após os dados serem enviados do servidor.O valor padrão é 0.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>Obtém ou define um <see cref="T:System.TimeSpan" /> que representa a quantidade de tempo que um cliente deve permitir a conexão antes de ser reduzido para outro transporte ou falhar.O valor padrão é 5 segundos.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>Representa o contexto do host do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <param name="environment">O ambiente do host do SignalR.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>Obtém o ambiente do host do SignalR.</summary>
      <returns>O ambiente do host do SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>Representa o host para as extensões do resolvedor de dependências.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>Inicializar o host para as extensões do resolvedor de dependências.</summary>
      <param name="resolver">O IDependencyResolver.</param>
      <param name="instanceName">O nome de instância.</param>
      <param name="hostShutdownToken">O token de encerramento do host.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>Representa uma conexão ao cliente.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>Obtém um token de cancelamento que representa vida útil do cliente.</summary>
      <returns>Um token de cancelamento que representa a vida útil do cliente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>Obtém ou define o tipo do conteúdo da resposta.</summary>
      <returns>O tipo do conteúdo da resposta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>Libera a resposta em buffer para o cliente.</summary>
      <returns>Uma tarefa que representa quando os dados foram liberados.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Grava dados em buffer.</summary>
      <param name="data">Os dados a serem gravados em buffer.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>Responsável por criar instâncias da <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Cria uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" />.</summary>
      <param name="resolver">O resolver de dependência a usar quando criar a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>Cria uma instância do tipo especificado usando o resolvedor de dependência ou o construtor padrão do tipo.</summary>
      <returns>Uma instância de uma <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="connectionType">O tipo de <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> a criar.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>Métodos de extensão para <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>Fecha a conexão para um cliente com dados opcionais.</summary>
      <returns>Uma tarefa que representa quando a conexão é fechada.</returns>
      <param name="response">A <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</param>
      <param name="data">Os dados a serem gravados para a conexão.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>Aplica atributos de autorização da classe <see cref="T:Microsoft.AspNet.SignalR.Hub" /> para determinar se deve permitir que os clientes recebam mensagens enviadas a partir do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
      <param name="globalConnectionAuthorizer">O autorizador de conexão global.</param>
      <param name="globalInvocationAuthorizer">O autorizador de invocação global.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Ajusta uma função a ser chamada antes que um cliente se inscreva aos sinais que pertencem ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> .Por padrão, o <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> procurará atributos no hub para ajudar a determinar se o cliente está autorizado a inscrever-se nas invocações de método para o hub descrito.A função retorna verdade se o cliente estiver autorizado a inscrever-se às invocações de método do hub do lado do cliente; falso se ocorrer o contrário.</summary>
      <returns>Uma função ajustada que dita se o cliente está ou não autorizado a conectar-se ao Hub descrito.</returns>
      <param name="authorizeConnect">Uma função que dita se o cliente está ou não autorizado a conectar-se ao Hub descrito.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Ajusta uma função que invoca um método de hub do lado do servidor.Mesmo se um cliente não tiver sido autorizado a se conectar a um hub, ele ainda está autorizado a chamar métodos do lado do servidor nesse hub, a menos que isso esteja impedido em <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> por não executar o parâmetro de chamada.</summary>
      <returns>Uma função ajustada que invoca um método de hub do lado do servidor.</returns>
      <param name="invoke">Uma função que invoca um método de hub do lado do servidor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>Descreve uma invocação de método de hub do lado do cliente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>Obtém ou define a lista de argumentos com que o método de hub do lado do cliente será chamado.</summary>
      <returns>A lista de argumentos associada ao método de hub do lado do cliente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>Obtém ou define o nome do hub ao qual pertence o método que está sendo invocado.</summary>
      <returns>O nome do hub ao qual pertence o método que está invocado.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>Obtém ou define o nome do método de hub do lado do cliente a ser invocado.</summary>
      <returns>O nome do método de hub do lado cliente a ser invocado.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>Obtém ou define um armazenamento de valor chave representando o estado do hub no servidor, o qual foi alterado desde a última vez em que o estado do hub foi enviado ao cliente.</summary>
      <returns>Uma armazenagem chave-valor que representa o estado do hub no servidor.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>Representa um proxy do lado do servidor para o hub do lado cliente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>Invoca um método na(s) conexão(ões) representada(s) pela instância de <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" />.</summary>
      <returns>Uma tarefa que representa quando os dados foram enviados ao cliente.</returns>
      <param name="method">O nome do método a ser invocado.</param>
      <param name="args">Os argumentos a transmitir para o cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Executa o método <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" />.</summary>
      <returns>Sempre verdadeiro.</returns>
      <param name="binder">A informação que contém a semântica de associação e detalhes da operação de hub do lado do cliente.</param>
      <param name="args">Os argumentos que são passados para o membro do objeto durante a operação de invocação.</param>
      <param name="result">Quando esse método retorna, ele contém o resultado da invocação do membro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>Representa um proxy da ID de conexão para o hub do lado cliente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>Representa o localizador de assembly padrão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>Obtém os assemblies que foram carregados dentro do domínio do aplicativo atual.</summary>
      <returns>Uma matriz de assemblies no domínio do aplicativo atual.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>Representa o ativador padrão para hubs do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" />.</summary>
      <param name="resolver">O resolvedor de dependência</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Cria um novo ativador de hub.</summary>
      <returns>O ativador de hub criado.</returns>
      <param name="descriptor">O descritor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>Representa um gerenciador de hub padrão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" />.</summary>
      <param name="resolver">O resolvedor de hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>Recupera um descritor de hub único.</summary>
      <returns>O descritor de hub, se encontrado; caso contrário, nulo.</returns>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Recupera um método com um determinado nome em um determinado hub.</summary>
      <returns>O descritor do método, se localizado.nulo caso contrário.</returns>
      <param name="hubName">O nome do hub.</param>
      <param name="method">O nome do método a ser localizado.</param>
      <param name="parameters">Os parâmetros do método a corresponder.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Obtém todos os métodos disponíveis para chamar em um determinado hub.</summary>
      <returns>A lista de métodos disponíveis.</returns>
      <param name="hubName">O nome do hub.</param>
      <param name="predicate">Um predicado opcional para resultados de filtragem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Recupera todos os hubs disponíveis correspondentes ao respectivo predicado.</summary>
      <returns>A lista de descritores do hub.</returns>
      <param name="predicate">O predicado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>Resolve um determinado nome de hub para um objeto concreto.</summary>
      <returns>A instância de implementação de hub, se localizada.nulo caso contrário.</returns>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>Resolve todos os hubs disponíveis para seus objetos concretos.</summary>
      <returns>A lista de instâncias do hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>Representa um gerador para o proxy JavaScript padrão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="manager">O gerenciador do hub.</param>
      <param name="javaScriptMinifier">O minificador de JavaScript.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="resolver">O resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Gera um proxy especificado.</summary>
      <returns>O proxy gerado.</returns>
      <param name="serviceUrl">A URL do serviço.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>Gera um proxy especificado.</summary>
      <returns>O proxy gerado.</returns>
      <param name="serviceUrl">A URL do serviço.</param>
      <param name="includeDocComments">verdadeiro para incluir comentários em Doc; caso contrário, falso.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>Representa o resolvedor padrão para o parâmetro do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Resolve valores de parâmetro de método baseados em objetos fornecidos.</summary>
      <returns>A matriz de valores do parâmetro.</returns>
      <param name="method">O descritor de método.</param>
      <param name="values">A lista de valores dos quais resolver valores de parâmetro.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>Resolve um valor de parâmetro baseado no objeto fornecido.</summary>
      <returns>O valor de parâmetro.</returns>
      <param name="descriptor">O descritor do parâmetro.</param>
      <param name="value">O valor do qual resolver o valor de parâmetro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>Descreve as informações do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>Obtém ou define o nome do hub.</summary>
      <returns>O nome do hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>Obtém ou define um valor que indica se um nome de atributo hub é especificado.</summary>
      <returns>verdadeiro se um nome de atributo hub for especificado. Caso contrário, falso.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>Contém um objeto do dicionário para armazenar os pares chave-valor, e substitui os métodos TrySetMember e TryGetMember para suportar a nova sintaxe.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" />.</summary>
      <param name="obj">O objeto do dicionário.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adiciona um par chave/valor especificado ao dicionário.</summary>
      <param name="item">O objeto do par chave/valor a ser adicionado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>Adiciona o valor e chave especificados ao dicionário.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>Remove todas as chaves e valores do dicionário.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina se o dicionário contém um item do par chave/valor específico.</summary>
      <returns>verdadeiro se o dicionário contiver um elemento com o valor especificado; caso contrário, falso.</returns>
      <param name="item">O item do par chave/valor a ser localizado no dicionário.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>Determina se o dicionário contém a chave especificada.</summary>
      <returns>verdadeiro se o dicionário contiver a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave a ser localizada no dicionário.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia os elementos do par chave/valor em uma matriz de uma dimensão existente, começando no índice de matriz especificado.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados do dicionário.</param>
      <param name="arrayIndex">O índice baseado em zero na matriz na qual a cópia inicia.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>Obtém o número de itens no dicionário.</summary>
      <returns>O número de itens no dicionário.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>Retorna um enumerador que itera por meio do dicionário.</summary>
      <returns>O enumerável que itera por meio do dicionário.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>Obtém se o dicionário dinâmico for somente para leitura.</summary>
      <returns>verdadeiro se o dicionário dinâmico for somente para leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>Obtém ou define o item com a chave específica no dicionário.</summary>
      <returns>O item com a chave específica no dicionário.</returns>
      <param name="key">A chave do item.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>Obtém a coleção de chaves contidas no dicionário.</summary>
      <returns>A coleção de chaves contidas no dicionário.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Remove um item do par chave/valor específico do dicionário.</summary>
      <returns>O dicionário com item removido.</returns>
      <param name="item">O item a ser removido.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>Remove uma chave específica do dicionário.</summary>
      <returns>O dicionário com chave removida.</returns>
      <param name="key">A chave a ser removida.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera por meio de uma coleção.</summary>
      <returns>O enumerador que itera por meio de uma coleção.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Fornece a implementação para operações que obtém valores de membro.</summary>
      <returns>verdadeiro se a operação for bem sucedida; caso contrário, falso.</returns>
      <param name="binder">Fornece as informações sobre o objeto que chamou a operação dinâmica.</param>
      <param name="result">O resultado da operação de obtenção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Obtém o valor associado à chave especificada.</summary>
      <returns>verdadeiro se o dicionário contiver um elemento com a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do valor a ser obtido.</param>
      <param name="value">Quando esse método retorna, contém o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro do valor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Fornece a implementação para operações que definem valores de membro.</summary>
      <returns>verdadeiro se a operação for bem sucedida; caso contrário, falso.</returns>
      <param name="binder">Fornece as informações sobre o objeto que chamou a operação dinâmica.</param>
      <param name="value">O valor para o qual definir o membro.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>Descodifica um valor especificado associado ao dicionário.</summary>
      <returns>O valor descodificado.</returns>
      <param name="value">O valor a ser descodificado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>Obtém a coleção de valores contidos no dicionário.</summary>
      <returns>A coleção de valores contidos no dicionário.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>Quebra um valor especificado associado ao dicionário.</summary>
      <returns>O valor quebrado.</returns>
      <param name="value">O valor a ser quebrado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>Representa um gerador para o proxy JavaScript vazio.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Gera um proxy com uma URL especificada.</summary>
      <returns>O proxy gerado.</returns>
      <param name="serviceUrl">A URL do serviço.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>Representa o enumerável associado ao localizador de assembly.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" />.</summary>
      <param name="assemblies">Os assemblies.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>Retorna a lista de assemblies.</summary>
      <returns>A lista de assemblies.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>A excepção a ser enviada para o cliente da chamada.Isso será substituído por uma Exceção genérica, a menos que o Erro seja um <see cref="T:Microsoft.AspNet.SignalR.HubException" /> ou <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" /> definido como verdade.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>O valor a ser retornado em lugar do Erro descartado.Sempre que o Resultado for definido, Erro será definido como nulo.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>Representa um grupo de proxy de sinal usado pelo hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>Representa o contexto de chamado do cliente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />.</summary>
      <param name="request">A solicitação HTTP atual.</param>
      <param name="connectionId">A ID de conexão.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>Obtém a ID de conexão do cliente de chamada.</summary>
      <returns>A ID de conexão do cliente de chamada.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>Obtém os cabeçalhos para a solicitação.</summary>
      <returns>Os cabeçalhos para a solicitação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>Obtém a cadeia de caracteres de consulta da solicitação.</summary>
      <returns>A cadeia de caracteres de consulta da solicitação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>Obtém o <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> para a solicitação HTTP atual.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> para a solicitação HTTP atual.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>Obtém os cookies para a solicitação.</summary>
      <returns>Os cookies para a solicitação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>Obtém o <see cref="T:System.Security.Principal.IPrincipal" /> para a solicitação.</summary>
      <returns>O <see cref="T:System.Security.Principal.IPrincipal" /> para a solicitação.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>Encapsula todas as informações sobre uma conexão SignalR individual para um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
      <param name="pipelineInvoker">O chamador de pipeline.</param>
      <param name="connection">A conexão de interface.</param>
      <param name="hubName">Nome do hub.</param>
      <param name="connectionId">A id de conexão.</param>
      <param name="tracker">O rastreador de alteração de estado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>Obtém ou define o cliente chamador.</summary>
      <returns>O cliente chamador.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>Obtém ou define todos os clientes conectados, exceto pelo cliente chamador.</summary>
      <returns>Todos os clientes conectados, exceto o cliente da chamada.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>Retorna uma representação dinâmica de todos os clientes em um grupo, exceto o cliente da chamada.</summary>
      <returns>Uma representação dinâmica de todos os clientes em um grupo, exceto o cliente da chamada.</returns>
      <param name="groupName">O nome do grupo.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>Retorna uma representação dinâmica de todos os clientes em grupos especificados, exceto o cliente da chamada.</summary>
      <returns>Uma representação dinâmica de todos os clientes em um grupo, exceto o cliente da chamada.</returns>
      <param name="groupNames">O nome dos grupos</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>Retorna uma representação dinâmica de todos os clientes, exceto daqueles clientes da chamada especificados.</summary>
      <returns>Uma representação dinâmica de todos os clientes, exceto daqueles clientes da chamada especificados.</returns>
      <param name="excludeConnectionIds">Uma lista de ids de conexão a excluir</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>Retorna uma representação dinâmica da conexão com a ID de conexão especificada.</summary>
      <returns>Uma representação dinâmica do cliente especificado.</returns>
      <param name="connectionId">A ID de conexão</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>Retorna uma representação dinâmica da conexão com as IDs de conexão especificada.</summary>
      <returns>Uma representação dinâmica dos clientes especificados.</returns>
      <param name="connectionIds">As IDs de conexão.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>Retorna uma representação dinâmica do grupo especificado.</summary>
      <returns>Uma representação dinâmica do grupo especificado.</returns>
      <param name="groupName">O nome do grupo</param>
      <param name="excludeConnectionIds">Uma lista de ids de conexão a excluir</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>Retorna uma representação dinâmica dos grupos especificados.</summary>
      <returns>Uma representação dinâmica dos grupos especificados.</returns>
      <param name="groupNames">Os nomes dos grupos.</param>
      <param name="excludeConnectionIds">Uma lista de ids de conexão a excluir</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>Representa as informações sobre um único hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>Cria um nome qualificado para o hub usando o nome desqualificado especificado.</summary>
      <returns>O nome qualificado criado.</returns>
      <param name="unqualifiedName">O nome desqualificado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>Obtém ou define o tipo do hub.</summary>
      <returns>O tipo do hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>Trata de toda comunicação via conexão persistente de hubs.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
      <param name="configuration">As definições de configuração que determinam a possibilidade de habilitar proxies JS e oferecer aos clientes erros de hub detalhados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Cria uma lista de hubs que são autorizados para a solicitação de conexão especificada.</summary>
      <returns>verdadeiro se houver dois hubs autorizados; caso contrário, falso.</returns>
      <param name="request">A solicitação para a conexão atual.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Chamado pelo host a inicializar a distribuição do hub para o IDependencyResolver.</summary>
      <param name="resolver">O resolvedor IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chamado quando a conexão se estabelece para essa instância do hub.</summary>
      <returns>Uma tarefa que é chamada quando a conexão se estabelece para esta instância do hub.</returns>
      <param name="request">A IRequest para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chamado quando a conexão é desconectada dessa instância do hub.</summary>
      <returns>Uma tarefa que é chamada quando uma conexão se desconecta desta instância do hub.</returns>
      <param name="request">A IRequest para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Processa as chamadas de método recebidas do hub.</summary>
      <returns>Uma tarefa que é chamada quando os dados são recebidos desta instância do hub.</returns>
      <param name="request">A IRequest para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
      <param name="data">Os dados recebidos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Chamado quando a conexão se restabelece para essa instância do hub.</summary>
      <returns>Uma tarefa que é chamada quando a conexão se reconecta a esta instância do hub.</returns>
      <param name="request">A IRequest para a conexão atual.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Chamado quando ocorre uma reconexão, após exceder um tempo limite, para determinar quais grupos devem ser incluídos novamente.</summary>
      <returns>Uma lista de conexão usada para reconectar após um tempo limite ser atingido, a fim de determinar quais grupos devem ser reingressados.</returns>
      <param name="request">A IRequest para a conexão atual.</param>
      <param name="groups">Os grupos que a conexão de chamada declara fazer parte.</param>
      <param name="connectionId">A ID do cliente que está se reconectando.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Manipula todas as solicitações para o HostContext.</summary>
      <returns>Uma tarefa que manipula todas as solicitações para o HostContext.</returns>
      <param name="context">O contexto do host.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>Obtém as conexões do hub que habilitam aplicativos para rastrear a execução de código e associar mensagens de rastreamento a esta origem.</summary>
      <returns>As conexões do hub que habilitam aplicativos para rastrear a execução de código e associar mensagens de rastreamento a esta origem.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>Fornece uma extensão de gerenciador do hub para todo o processo do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>Garante todas as informações sobre o descritor do hub.</summary>
      <returns>O descritor do hub para garantir todas as informações.</returns>
      <param name="hubManager">O gerenciador do hub.</param>
      <param name="hubName">Nome do hub.</param>
      <param name="counters">Os contadores de desempenho.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>Obtém todos os métodos disponíveis para chamar em um determinado hub.</summary>
      <returns>A coleção de métodos para chamar em um determinado hub.</returns>
      <param name="hubManager">O gerenciador do hub.</param>
      <param name="hubName">Nome do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>Recupera todos os hubs disponíveis.</summary>
      <returns>A recuperação de todos os hubs disponíveis.</returns>
      <param name="hubManager">O gerenciador do hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>Representa os atributos de nome do método para o hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" />.</summary>
      <param name="methodName">O nome do método.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>Obtém ou define o nome do método.</summary>
      <returns>O nome do método.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>Representa o atributo para o nome do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" />.</summary>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>Obtém ou define o nome do hub.</summary>
      <returns>O nome do hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>Classe de base comum para simplificar a implementação de IHubPipelineModules.Um módulo pode interceptar e personalizar diversos estágios do processamento do hub, como conectar, reconectar, desconectar, invocar métodos de hub do lado do servidor, invocar métodos de hub do lado do cliente, autorizar clientes de hub e incluir novamente grupos de hub.Um módulo pode ser ativado chamando <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" /> .Os módulos combinados adicionados ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> são invocados por meio da interface do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Ajusta uma função a ser chamada antes que um cliente se inscreva aos sinais que pertencem ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> .Por padrão, o <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> procurará atributos no <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> para ajudar a determinar se o cliente está autorizado a inscrever-se às invocações de método para o hub descrito.A função retorna verdade se o cliente estiver autorizado a inscrever-se às invocações de método do hub do lado do cliente; falso se ocorrer o contrário.</summary>
      <returns>Uma função ajustada que dita se o cliente está ou não autorizado a conectar-se ao Hub descrito.</returns>
      <param name="authorizeConnect">Uma função que dita se o cliente está ou não autorizado a conectar-se ao Hub descrito.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que é chamada quando um cliente se conecta ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> em que o cliente se conectar.Por padrão, isso resulta no método OnConnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Uma função ajustada a ser chamada quando um cliente se conecta a um hub.</returns>
      <param name="connect">Uma função a ser chamada quando um cliente se conecta a um hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que é chamada quando um cliente se desconecta do <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> em que o cliente estava conectado.Por padrão, isso resulta no método OnDisconnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Uma função ajustada a ser chamada quando um cliente se desconecta de um hub.</returns>
      <param name="disconnect">Uma função a ser chamada quando um cliente se desconecta de um hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Ajusta uma função que invoca um método de hub do lado do servidor.Mesmo se um cliente não tiver sido autorizado a se conectar a um hub, ele ainda está autorizado a chamar métodos do lado do servidor nesse hub, a menos que isso esteja impedido em <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> por não executar o parâmetro de chamada.</summary>
      <returns>Uma função ajustada que invoca um método de hub do lado do servidor.</returns>
      <param name="invoke">Uma função que invoca um método de hub do lado do servidor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que invoca um método de hub do lado do cliente.</summary>
      <returns>Uma função ajustada que invoca um método de hub do lado do cliente.</returns>
      <param name="send">Uma função que invoca um método de hub do lado do cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que é chamada quando um cliente se reconecta ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> em que o cliente se conectar.Por padrão, isso resulta no método OnReconnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Uma função ajustada a ser chamada quando um cliente se reconecta a um hub.</returns>
      <param name="reconnect">Uma função a ser chamada quando um cliente se reconecta a um hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Ajusta uma função que determina quais dos grupos pertencentes ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> o cliente deve ser permitido incluir-se.Por padrão, clientes que estão reconectando ao servidor serão removidos de todos os grupos dos quais eram membros anteriormente, porque clientes não confiáveis podem ter solicitado a inclusão como membro de grupos para os quais nunca foram autorizados.</summary>
      <returns>Uma função ajustada que determina quais grupos o cliente deve ser permitido incluir-se novamente.</returns>
      <param name="rejoiningGroups">Uma função que determina quais grupos o cliente deve ser permitido incluir-se novamente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Esse método é chamado após os componentes de conexão de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados e depois de <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> ser executado, se for afinal.</summary>
      <param name="hub">O hub ao qual o cliente conectou.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Esse método é chamado após os componentes de desconexão de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados e depois de <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> ser executado, se for afinal.</summary>
      <param name="hub">O hub do qual o cliente desconectou.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Esse método é chamado após os componentes de entrada de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> e o método de hub do lado do servidor concluírem a execução.</summary>
      <returns>O valor de retorno novo ou possivelmente atualizado do método de hub do lado do servidor</returns>
      <param name="result">O valor de retorno do método de hub do lado do servidor</param>
      <param name="context">Uma descrição da invocação do método de hub do lado do servidor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Esse método é chamado após os componentes de saída de quaisquer módulos posteriormente adicionados ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Isso não significa que todos os clientes receberam a invocação de método de hub, mas indica que uma mensagem de invocação de hub foi publicada com êxito em um barramento de mensagem.</summary>
      <param name="context">Uma descrição da invocação do método de hub do lado do cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Esse método é chamado após os componentes de reconexão de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados e depois de <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> ser executado, se for afinal.</summary>
      <param name="hub">O hub ao qual o cliente reconectou.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Esse método é chamado antes dos componentes AuthorizeConnect de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Se isso retorna falso, então esses módulos adicionados posteriormente não executarão e o cliente não poderá inscrever-se às invocações do lado cliente dos métodos pertencentes ao hub definido pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> .</summary>
      <returns>verdadeiro, se o cliente estiver autorizado a conectar-se ao hub; caso contrário, falso.</returns>
      <param name="hubDescriptor">Uma descrição do hub em que o cliente está tentando inscrever-se.</param>
      <param name="request">A solicitação de conexão do cliente que está tentando inscrever-se ao hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Esse método é chamado antes dos componentes de conexão de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Se isso retornar falso, então esses módulos adicionados posteriormente e o método do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> não executarão.</summary>
      <returns>verdadeiro, se os componentes de conexão dos módulos adicionados posteriormente e o método do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> precisarem ser executados, falso, se contrário.</returns>
      <param name="hub">O hub ao qual o cliente conectou.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Esse método é chamado antes dos componentes de desconexão de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Se isso retornar falso, então esses módulos adicionados posteriormente e o método do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> não executarão.</summary>
      <returns>verdadeiro, se os componentes de desconexão dos módulos adicionados posteriormente e o método do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> precisarem ser executados, falso se contrário.</returns>
      <param name="hub">O hub do qual o cliente desconectou.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Esse método é chamado antes dos componentes de entrada de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Se isso retornar falso, então esses módulos adicionados posteriormente e o método do hub do lado do servidor não serão executados.Mesmo se um cliente não tiver sido autorizado a se conectar a um hub, ele ainda estará autorizado a invocar os métodos do lado do servidor nesse hub, a menos que isso seja impedido em <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> não executando o parâmetro de invocação ou impedido em <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" /> por falso retorno.</summary>
      <returns>verdadeiro, se os componentes de entrada dos módulos adicionados posteriormente e a invocação de método do hub do lado do servidor precisarem ser executados, falso se contrário.</returns>
      <param name="context">Uma descrição da invocação do método de hub do lado do servidor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Esse método é chamado antes dos componentes de saída de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Se isso retornar falso, então esses módulos adicionados posteriormente e a(s) invocação(-ções) do método do hub do lado do cliente não serão executados.</summary>
      <returns>verdadeiro, se os componentes de saída dos módulos adicionados posteriormente e a(s) invocação(-ções) de método do hub do lado do cliente precisarem ser executados, falso se contrário.</returns>
      <param name="context">Uma descrição da invocação do método de hub do lado do cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Esse método é chamado antes dos componentes de reconexão de quaisquer módulos adicionados posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> serem executados.Se isso retornar falso, então esses módulos adicionados posteriormente e o método do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> não executarão.</summary>
      <returns>verdadeiro, se os componentes de reconexão dos módulos adicionados posteriormente e o método do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> precisarem ser executados, falso se contrário.</returns>
      <param name="hub">O hub ao qual o cliente reconectou.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Isso é chamado quando uma exceção não percebida é lançada por um método do hub do lado do servidor ou componente de entrada de um módulo adicionado posteriormente ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.A observação da exceção usando esse método não impedirá de ser propagado para outros módulos.</summary>
      <param name="exceptionContext">Representa que a exceção foi lançada durante a invocação do lado do servidor.É possível alterar o erro ou definir um resultado usando este contexto.</param>
      <param name="invokerContext">Uma descrição da invocação do método de hub do lado do servidor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>Fornece métodos que se comunicam com solicitação de conexões do SignalR conectadas a um hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>Obtém ou define o valor de conexão do hub.</summary>
      <returns>O valor de conexão do hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>Obtém ou define a ID de conexão.</summary>
      <returns>A id de conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>Obtém ou define o método da solicitação.</summary>
      <returns>O método da solicitação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>Obtém ou define os valores de parâmetro.</summary>
      <returns>Os valores de parâmetro.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>Obtém ou define o estado atual da solicitação.</summary>
      <returns>O estado atual da solicitação.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>Representa a resposta retornada de uma solicitação de hub recebida.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>Obtém ou define a exceção que ocorre como um resultado de invocação do método de hub.</summary>
      <returns>A exceção que ocorre como um resultado de invocação do método de hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>Dados de erro extra contidos no <see cref="T:Microsoft.AspNet.SignalR.HubException" /></summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>Obtém ou define a ID da operação.</summary>
      <returns>A ID da operação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>Indica se o Erro é um <see cref="T:Microsoft.AspNet.SignalR.HubException" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>Obtém ou define o resultado da invocação.</summary>
      <returns>O resultado da invocação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>Obtém ou define o rastreamento de pilha da exceção que ocorre como um resultado de invocação do método de hub.</summary>
      <returns>O rastreamento de pilha da exceção que ocorre como um resultado de invocação do método de hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>Obtém ou define as alterações feitas no estado na viagem de ida e volta.</summary>
      <returns>As alterações feitas no estado na viagem de ida e volta.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>Localiza um assembly e retorna informações sobre seus módulos.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>Retorna uma lista de assemblies que são referenciados pelo módulo.</summary>
      <returns>Uma lista de assemblies que são referenciados pelo módulo.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>Interface a ser implementada pelo <see cref="T:System.Attribute" /> que pode autorizar o cliente a conectar-se a um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> .</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Dado um <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />, determina se o cliente está autorizado a conectar-se ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> .</summary>
      <returns>verdade se o autor da chamada está autorizado a conectar-se ao hub; caso contrário, falso.</returns>
      <param name="hubDescriptor">Descrição do hub em que cliente está tentando se conectar.</param>
      <param name="request">A solicitação de conexão vinda do cliente.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>Interface a ser implementada por <see cref="T:System.Attribute" /> que pode autorizar a invocação dos métodos de <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Dado um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, determina se o cliente está autorizado a invocar o método <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>verdade, se o autor da chamada estiver autorizado a invocar o método de <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />; caso contrário, falso.</returns>
      <param name="hubIncomingInvokerContext">Um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> fornecendo detalhes a respeito da invocação de método do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Indica se a instância da interface é um atributo aplicado diretamente a um método.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>Um proxy do lado do servidor para o hub do lado cliente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>Invoca um método na(s) conexão(ões) representada(s) pela instância de <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" />.</summary>
      <returns>Uma tarefa que representa quando os dados foram enviados ao cliente.</returns>
      <param name="method">nome do método a invocar</param>
      <param name="args">argumentos a transmitir para o cliente</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>Fornece uma interface que representa os métodos que se comunicam com conexões SignalR conectadas ao hub.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>Obtém ou define os clientes sendo conectados ao hub.</summary>
      <returns>Os clientes sendo conectados ao hub.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>Obtém ou define informações sobre o cliente da chamada.</summary>
      <returns>As informações sobre o cliente da chamada.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>Obtém ou define o gerenciador de grupo para essa instância do hub.</summary>
      <returns>O gerenciador de grupo para essa instância do hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>Chamado quando a conexão se estabelece para essa instância do hub.</summary>
      <returns>O objeto da tarefa que representa a operação de conexão.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>Chamado quando a conexão é desconectada dessa instância do hub.</summary>
      <returns>O objeto da tarefa que representa a operação de desconexão.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>Chamado quando a conexão se restabelece para essa instância do hub.</summary>
      <returns>O objeto da tarefa que representa a operação de reconexão.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>Fornece um método para criar instância de hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Cria uma nova instância de hub.</summary>
      <returns>O hub recém-criado.</returns>
      <param name="descriptor">O descritor do hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>Encapsula todas as informações sobre uma conexão SignalR individual para um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>Encapsula todas as informações sobre uma conexão SignalR para um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>Obtém ou define todos os clientes conectados.</summary>
      <returns>Todos os clientes conectados.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>Retorna uma representação dinâmica de todos os clientes, exceto daqueles clientes da chamada especificados.</summary>
      <returns>Uma representação dinâmica de todos os clientes, exceto daqueles clientes da chamada especificados.</returns>
      <param name="excludeConnectionIds">Uma lista de IDs de conexão a excluir.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>Retorna uma representação dinâmica da conexão com a ID de conexão especificada.</summary>
      <returns>Uma representação dinâmica do cliente especificado.</returns>
      <param name="connectionId">A ID de conexão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>Retorna uma representação dinâmica do grupo especificado.</summary>
      <returns>Uma representação dinâmica do grupo especificado.</returns>
      <param name="groupName">O nome do grupo.</param>
      <param name="excludeConnectionIds">Uma lista de IDs de conexão a excluir.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>Descreve o provedor de descritor do hub, que fornece informações sobre hubs disponíveis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>Recupera todos os hubs disponíveis.</summary>
      <returns>Coleção de descritores do hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Tenta recuperar hub com um determinado nome.</summary>
      <returns>Verdade, se um hub foi localizado</returns>
      <param name="hubName">Nome do hub.</param>
      <param name="descriptor">Objeto descritor recuperado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>Uma descrição de uma invocação de método hub do lado do servidor, originada de um cliente.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>Obtém os argumentos a serem transmitidos para o método invocado.</summary>
      <returns>Os argumentos a serem transmitidos para o método invocado.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>Obtém uma instância de hub que contém o método invocado como um membro.</summary>
      <returns>Uma instância de hub que contém o método invocado como um membro.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>Obtém uma descrição do método que está sendo invocado pelo cliente.</summary>
      <returns>Uma descrição do método que está sendo invocado pelo cliente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>Obtém um armazenamento de valor de chave representando o estado de hub no cliente no momento da invocação.</summary>
      <returns>Um armazenamento de valor de chave representando o estado de hub no cliente no momento da invocação.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>Descreve um gerenciador de hub - ponto principal em todo processo de pesquisa de hub e método.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>Recupera um descritor de hub único.</summary>
      <returns>O descritor de hub, se localizado.Nulo, caso contrário.</returns>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Recupera um método com um determinado nome em um determinado hub.</summary>
      <returns>O descritor do método, se localizado.Nulo, caso contrário.</returns>
      <param name="hubName">O nome do hub.</param>
      <param name="method">O nome do método a ser localizado.</param>
      <param name="parameters">Os parâmetros do método a corresponder.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Obtém todos os métodos disponíveis para chamar em um determinado hub.</summary>
      <returns>A lista de métodos disponíveis.</returns>
      <param name="hubName">O nome do hub,</param>
      <param name="predicate">O predicado opcional para resultados de filtragem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Recupera todos os hubs disponíveis correspondentes ao respectivo predicado.</summary>
      <returns>A lista de descritores do hub.</returns>
      <param name="predicate">O predicado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>Resolve um determinado nome de hub para um objeto concreto.</summary>
      <returns>A instância de implementação de hub, se localizada.Nulo, caso contrário.</returns>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>Resolve todos os hubs disponíveis para seus objetos concretos.</summary>
      <returns>A lista de instâncias do hub.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>Uma descrição de uma invocação de método hub do lado do cliente, originada do servidor.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>Obtém a <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> , se houver, correspondente ao cliente que invocou o método de hub do lado do servidor que está invocando o método de hub do lado do cliente.</summary>
      <returns>A <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> , se houver, correspondente ao cliente que invocou o método de hub do lado do servidor que está invocando o método de hub do lado do cliente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>Obtém os sinais (ConnectionId, nome de tipo do hub ou nome de tipo do hub + "." + nome do grupo) pertencentes aos clientes que não deveriam receber a invocação do método independentemente do <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" /> .</summary>
      <returns>Os sinais (ConnectionId, nome de tipo do hub ou nome de tipo do hub + "." + nome do grupo) pertencentes aos clientes que não deveriam receber a invocação do método independentemente do <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" /> .</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>Obtém uma descrição da chamada de método a ser feita no cliente.</summary>
      <returns>Uma descrição da chamada de método a ser feita no cliente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>Obtém o sinal (ConnectionId, nome de tipo do hub ou nome de tipo do hub + "." + nome de grupo) pertencente aos clientes que recebem a invocação de método.</summary>
      <returns>O sinal (ConnectionId, nome de tipo do hub ou nome de tipo do hub + "." + nome de grupo) pertencente aos clientes que recebem a invocação de método.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>Os sinais (ConnectionId, nome de tipo do hub ou nome de tipo do hub + "." + nome de grupo) pertencente aos clientes que recebem a invocação de método.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>Um conjunto de módulos que podem interceptar e personalizar diversos estágios de processamento do hub, como conectar, reconectar, desconectar, invocar métodos de hub do lado do servidor, invocar métodos de hub do lado do cliente, autorizar cliente de hub e incluir novamente grupos de hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>Adiciona um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> ao pipeline do hub.Módulos adicionados ao pipeline primeiro ajustarão os módulos que forem adicionados ao pipeline posteriormente.Todos os módulos devem ser adicionados ao pipeline antes que qualquer método no <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" /> seja invocado.</summary>
      <returns>O próprio <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> com o módulo adicionado recentemente, permitindo que as chamadas do <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" /> sejam encadeadas.Esse método muda o pipeline em que ele está invocado, portanto não é necessário armazenar seu resultado.</returns>
      <param name="pipelineModule">Um módulo que pode interceptar e personalizar diversos estágios de processamento do hub, como conectar, reconectar, desconectar, invocar métodos de hub do lado do servidor, invocar métodos de hub do lado do cliente, autorizar clientes de hub e incluir novamente grupos de hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>Implementações dessa interface são responsáveis por executar a operação necessária para concluir diversos estágios do processamento do hub, como conectar, reconectar, desconectar, invocar métodos de hub do lado do servidor, invocar métodos de hub do lado do cliente, autorizar clientes de hub e incluir novamente grupos de hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Para ser chamado antes que um cliente se inscreva aos sinais que pertencem ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.Por padrão, o <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> procurará atributos no <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> para ajudar a determinar se o cliente está autorizado a inscrever-se às invocações de método para o hub descrito.</summary>
      <returns>verdade, se o cliente estiver autorizado a inscrever-se às invocações de método do hub do lado do cliente; falso se ocorrer o contrário.</returns>
      <param name="hubDescriptor">Uma descrição do hub no qual o cliente está tentando conectar-se.</param>
      <param name="request">A solicitação de conexão que está sendo feita pelo cliente que deve incluir o Usuário <see cref="T:System.Security.Principal.IPrincipal" /> do cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Para ser chamado quando um cliente conecta-se ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> ao qual o cliente se conecta.Por padrão, isso resulta no método OnConnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> ao qual o cliente está conectado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Para ser chamado quando um cliente desconecta-se do <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> ao qual o cliente estava conectado.Por padrão, isso resulta no método OnDisconnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> do qual o cliente foi desconectado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Invoca um método de hub do lado do servidor.</summary>
      <returns>Uma operação assíncrona que fornece o valor de retorno da invocação de método de hub do lado do servidor.</returns>
      <param name="context">Uma descrição da invocação do método de hub do lado do servidor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Para ser chamado quando um cliente reconecta-se ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> ao qual o cliente se conecta.Por padrão, isso resulta no método OnReconnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">Um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> ao qual o cliente está reconectado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>Esse método determina quais dos grupos pertencentes ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> o cliente deve ser permitido incluir-se novamente.Por padrão, clientes que estão reconectando ao servidor serão removidos de todos os grupos dos quais eram membros anteriormente, porque clientes não confiáveis podem ter solicitado a inclusão como membro de grupos para os quais nunca foram autorizados.</summary>
      <returns>Uma lista de grupos aos quais o cliente tem permissão de incluir-se novamente.</returns>
      <param name="hubDescriptor">Uma descrição do hub no qual o cliente está tentando incluir grupos novamente.</param>
      <param name="request">A solicitação de reconexão que está sendo feita pelo cliente que está tentando incluir grupos novamente.</param>
      <param name="groups">A lista de grupos pertencentes ao hub relevante, que o cliente reivindica ter sido membro antes de reconectar-se.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Invoca um método de hub do lado do cliente.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="context">Uma descrição da invocação do método de hub do lado do cliente.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>Um <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> pode interceptar e personalizar diversos estágios do processamento do hub, como conectar, reconectar, desconectar, invocar métodos de hub do lado do servidor, invocar métodos de hub do lado do cliente, autorizar clientes de hub e incluir novamente grupos de hub.Os módulos podem ser ativados chamando <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" /> .Os módulos combinados adicionados ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> são invocados por meio da interface do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Ajusta uma função a ser chamada antes que um cliente se inscreva aos sinais que pertencem ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> .Por padrão, o <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> procurará atributos no <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> para ajudar a determinar se o cliente está autorizado a inscrever-se às invocações de método para o hub descrito.A função retorna verdade se o cliente estiver autorizado a inscrever-se às invocações de método do hub do lado do cliente; falso se ocorrer o contrário.</summary>
      <returns>Uma função ajustada que dita se o cliente está ou não autorizado a conectar-se ao Hub descrito.</returns>
      <param name="authorizeConnect">Uma função que dita se o cliente está ou não autorizado a conectar-se ao Hub descrito.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que é chamada quando um cliente se conecta ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> em que o cliente se conectar.Por padrão, isso resulta no método OnConnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Uma função ajustada a ser chamada quando um cliente se conecta a um hub.</returns>
      <param name="connect">Uma função a ser chamada quando um cliente se conecta a um hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que é chamada quando um cliente se desconecta do <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> em que o cliente estava conectado.Por padrão, isso resulta no método OnDisconnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Uma função ajustada a ser chamada quando um cliente se desconecta de um hub.</returns>
      <param name="disconnect">Uma função a ser chamada quando um cliente se desconecta de um hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Ajusta uma função que invoca um método de hub do lado do servidor.Mesmo se um cliente não tiver sido autorizado a se conectar a um hub, ele ainda está autorizado a chamar métodos do lado do servidor nesse hub, a menos que isso esteja impedido em <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> por não executar o parâmetro de chamada.</summary>
      <returns>Uma função ajustada que invoca um método de hub do lado do servidor.</returns>
      <param name="invoke">Uma função que invoca um método de hub do lado do servidor.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que invoca um método de hub do lado do cliente.</summary>
      <returns>Uma função ajustada que invoca um método de hub do lado do cliente.</returns>
      <param name="send">Uma função que invoca um método de hub do lado do cliente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Ajusta uma função que é chamada quando um cliente se reconecta ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> para cada <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> em que o cliente se conectar.Por padrão, isso resulta no método OnReconnected do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> que está sendo chamado.</summary>
      <returns>Uma função ajustada a ser chamada quando um cliente se reconecta a um hub.</returns>
      <param name="reconnect">Uma função a ser chamada quando um cliente se reconecta a um hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Ajusta uma função que determina quais dos grupos pertencentes ao hub descrito pelo <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> o cliente deve ser permitido incluir-se.Por padrão, clientes que estão reconectando ao servidor serão removidos de todos os grupos dos quais eram membros anteriormente, porque clientes não confiáveis podem ter solicitado a inclusão como membro de grupos para os quais nunca foram autorizados.</summary>
      <returns>Uma função ajustada que determina quais grupos o cliente deve ser permitido incluir-se novamente.</returns>
      <param name="rejoiningGroups">Uma função que determina quais grupos o cliente deve ser permitido incluir-se novamente.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>Trata das solicitações recebidas de análise por meio do <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> .</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>Analisa a carga do hub de entrada em um <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" /> .</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" /> resultante.</returns>
      <param name="data">A carga de hub não processada.</param>
      <param name="serializer">O JsonSerializer usado para analisar os dados.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>Combina, minimiza e gera cache de JavaScript do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>Minimiza a origem especificada do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</summary>
      <returns>A origem especificada do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</returns>
      <param name="source">A origem minimizada.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>Gera o serviço de proxy para a interface JavaScript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Gera um proxy para a URL de serviços do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</summary>
      <returns>Um proxy para gerar a URL de serviços do <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</returns>
      <param name="serviceUrl">O serviço de URL.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>Descreve um provedor de método do hub que constrói um conjunto de métodos disponíveis em um determinado hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Recuperar todos os métodos em um determinado hub.</summary>
      <returns>Métodos disponíveis.</returns>
      <param name="hub">Objeto descritor do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Tenta recuperar um método.</summary>
      <returns>Verdade, se um método foi localizado.</returns>
      <param name="hub">Objeto descritor do hub</param>
      <param name="method">Nome do método.</param>
      <param name="descriptor">Descritor do método, se localizado.Nulo, caso contrário.</param>
      <param name="parameters">Parâmetros do método a corresponder.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>Descreve um resolvedor de parâmetro para resolver os valores correspondentes ao parâmetro, com base nas informações fornecidas.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Resolve valores de parâmetro de método baseados em objetos fornecidos.</summary>
      <returns>Matriz de valores de parâmetros.</returns>
      <param name="method">Descritor de método.</param>
      <param name="values">Lista de valores dos quais resolver valores de parâmetro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>Representa as informações sobre um único método do hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>Obtém ou define os atributos anexos a esse método.</summary>
      <returns>O atributos anexos a esse método.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>Obtém o objeto descritor de hub, destino para esse método.</summary>
      <returns>O objeto descritor de hub, destino para esse método.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>Obtém ou define o delegado de invocação do método.Assume um hub de destino e uma matriz de argumentos de invocação como seus argumentos.</summary>
      <returns>O delegado de invocação de método.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>Obtém ou define os parâmetros de método disponíveis.</summary>
      <returns>Os parâmetros de método disponíveis.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>Obtém ou define o tipo de retorno deste método.</summary>
      <returns>O tipo de retorno deste método.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>Representa a extensão de métodos para os hubs do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Especifica se uma extensão de método corresponde com outro descritor de método.</summary>
      <returns>verdadeiro se uma extensão de método corresponder a outro descritor de métodos; caso contrário; falso.</returns>
      <param name="methodDescriptor">O descritor de método.</param>
      <param name="parameters">A lista de parâmetros.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>Representa um exceção ocorrida quando um cliente não está autorizado a conectar-se ao hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> com dados serializados.</summary>
      <param name="info">As informações serializadas sobre a exceção.</param>
      <param name="context">As informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> com mensagem de erro.</summary>
      <param name="message">A mensagem referente à exceção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> com mensagem de erro e exceção interna.</summary>
      <param name="message">A mensagem referente à exceção.</param>
      <param name="inner">O erro que causou a exceção.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>Representa um minificador para JavaScript nulo.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>Especifica a instância <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Minifica a origem especificada do JavaScript.</summary>
      <returns>A origem minimizada.</returns>
      <param name="source">A origem a ser minificada.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>Representa as informações sobre um único parâmetro de método de hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>Obtém ou define o nome do parâmetro</summary>
      <returns>O nome do parâmetro.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>Obtém ou define o tipo de parâmetro.</summary>
      <returns>O tipo de parâmetro.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>Descreve o provedor de descritor do hub e fornece informações refletidas sobre hubs disponíveis.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" />.</summary>
      <param name="resolver">A <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>Recupera uma coleção de conexões para construir cache do hub.</summary>
      <returns>Uma coleção de conexões para construir cache do hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>Recupera todos os hubs disponíveis. </summary>
      <returns>A coleção de hubs disponíveis.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Tenta recuperar hub com um determinado nome.</summary>
      <returns>verdadeiro se o hub tiver sido localizado, caso contrário, falso.</returns>
      <param name="hubName">O nome do hub a ser recuperado.</param>
      <param name="descriptor">Quando esse método retorna, contém o objeto descritor recuperado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>Representa o método refletido para o provedor do descritor.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Retona uma coleção de métodos para o provedor.</summary>
      <returns>Uma coleção de métodos para o provedor.</returns>
      <param name="hub">O descritor do hub.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Procura pelo <paramref name="hub" /> especificado para o <paramref name="method" /> especificado.</summary>
      <returns>verdadeiro se o método correspondente ao conjunto nome/parâmetro for encontrado no hub, caso contrário falso.</returns>
      <param name="hub">Hub a ser procurado para o <paramref name="method" /> especificado.</param>
      <param name="method">O nome do método a ser pesquisado.</param>
      <param name="descriptor">Se bem sucedido, o <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" /> que foi resolvido.</param>
      <param name="parameters">O conjunto de parâmetros que será usado para ajudar a localizar uma sobrecarga específica do <paramref name="method" /> especificado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>Representa um auxiliar de reflexão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>Obtém o valor de atributo para este auxiliar.</summary>
      <returns>O valor de atributo para este auxiliar.</returns>
      <param name="source">A origem de onde obter o valor.</param>
      <param name="valueGetter">O getter de valor.</param>
      <typeparam name="TAttribute">O tipo do atributo.</typeparam>
      <typeparam name="TResult">O tipo do resultado.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>Obtém uma lista de métodos de hub exportados.</summary>
      <returns>Uma lista de métodos de hub exportados.</returns>
      <param name="type">O tipo dos métodos a obter.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>Representa o proxy de sinal usado pelo hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Obtém os dados de invocação de hub do cliente associados ao proxy.</summary>
      <returns>Os dados de invocação de hub do cliente associados ao proxy.</returns>
      <param name="method">O método.</param>
      <param name="args">Os argumentos.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>Obtém ou define o nome do hub.</summary>
      <returns>O nome do hub.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>Invoca um método e retorna resultados da chamada de método.</summary>
      <returns>O resultado da operação.</returns>
      <param name="method">O método a ser invocado.</param>
      <param name="args">A matriz de argumento.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>Obtém o define o sinal associado ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</summary>
      <returns>O sinal associado ao <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Fornece a implementação para operações que obtém valores de membro.</summary>
      <returns>verdadeiro se a operação for bem sucedida; caso contrário, falso.</returns>
      <param name="binder">As informações sobre o objeto que chamou a operação dinâmica.</param>
      <param name="result">O resultado da operação de obtenção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Fornece a implementação para operações que invocam um membro.</summary>
      <returns>verdadeiro se a operação for bem sucedida; caso contrário, falso.</returns>
      <param name="binder">Fornece informações sobre a operação dinâmica.</param>
      <param name="args">Os argumentos que são passados para o membro do objeto durante a operação de invocação.</param>
      <param name="result">O resultado da invocação de membro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>Representa um dicionário de controle de mudanças.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
      <param name="values">O valor do dicionário.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>Obtém as alterações associadas ao rastreador.</summary>
      <returns>As alterações associadas ao rastreador.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>Obtém ou define o item associado ao rastreador usando uma chave especificada.</summary>
      <returns>O item associado ao rastreador usando uma chave especificada.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>Representa o proxy de sinal de estado completo usado pelo hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Obtém os dados de invocação de hub do cliente associados ao proxy.</summary>
      <returns>Os dados de invocação de hub do cliente associados ao proxy.</returns>
      <param name="method">O método.</param>
      <param name="args">Os argumentos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Fornece a implementação para operações que obtém valores de membro.</summary>
      <returns>verdadeiro se a operação for bem sucedida; caso contrário, falso.</returns>
      <param name="binder">As informações sobre o objeto que chamou a operação dinâmica.</param>
      <param name="result">O resultado da operação de obtenção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Fornece a implementação para operações que obtém os valores de membro.</summary>
      <returns>verdadeiro se a operação for bem sucedida; caso contrário, falso.</returns>
      <param name="binder">As informações sobre o objeto que chamou a operação dinâmica.</param>
      <param name="value">O resultado da operação de definição.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>Representa uma instância que manipula o ACK (kit de certificação do aplicativo).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
      <param name="completeAcksOnTimeout">verdadeiro se o ACK for concluído no tempo limite; caso contrário, falso.</param>
      <param name="ackThreshold">o limite do ACK.</param>
      <param name="ackInterval">O intervalo do ACK.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>Cria um novo objeto do ACK.</summary>
      <returns>O objeto do ACK criado.</returns>
      <param name="id">O identificador.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>Libera todos os recursos usados por <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>Liberar todos os recursos usados por esta instância.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>Aciona um objeto do ACK especificado.</summary>
      <returns>O resultado da operação.</returns>
      <param name="id">O identificador do ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>Representa o leitor de texto associado ao segmento da matriz.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" />.</summary>
      <param name="buffer">O buffer do segmento da matriz.</param>
      <param name="encoding">A codificação.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número máximo especificado de caracteres a partir do leitor atual e grava dos dados em um buffer, iniciando no índice especificado.</summary>
      <returns>O número de caracteres lidos.</returns>
      <param name="buffer">Contém a matriz de caracteres especificada com os valores entre o índice e substituídos pelos caracteres lidos na origem atual.</param>
      <param name="index">A posição no buffer em que a gravação é iniciada.</param>
      <param name="count">O número máximo de caracteres a ler.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" />.</summary>
      <param name="newMessageBus">O novo barramento de mensagem.</param>
      <param name="jsonSerializer">O serializador JSON.</param>
      <param name="baseSignal">O sinal de base.</param>
      <param name="connectionId">A id de conexão.</param>
      <param name="signals">A coleção de sinais.</param>
      <param name="groups">A coleção de grupos.</param>
      <param name="traceManager">O gerenciador do rastreamento.</param>
      <param name="ackHandler">O manipulador do ACK.</param>
      <param name="performanceCounterManager">O gerenciador do contador de desempenho.</param>
      <param name="protectedData">Os dados protegidos.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>Obtém o sinal principal para esta conexão.</summary>
      <returns>O sinal principal dessa conexão.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>Ocorre quando o evento adicionou uma chave.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>Ocorre quando o evento removeu a chave.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>Obtém uma propriedade de identidade para esta conexão.</summary>
      <returns>Uma propriedade de identidade para esta conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>Obtém uma lista de objetos que podem ser acessados individualmente por índice.</summary>
      <returns>Uma lista de objetos que podem ser acessados individualmente por índice.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Recebe uma resposta de mensagem para o método de conexão.</summary>
      <returns>Uma resposta de mensagem a ser recebida para o método de conexão.</returns>
      <param name="messageId">A ID da mensagem.</param>
      <param name="callback">Determina se a conexão gera uma resposta de retorno de chamada.</param>
      <param name="maxMessages">O número máximo de mensagens.</param>
      <param name="state">O estado da conexão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Envia uma mensagem para uma ou mais conexões.</summary>
      <returns>Uma mensagem enviada para uma ou mais conexões.</returns>
      <param name="message">A mensagem enviada para as conexões.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>Obtém ou define uma assinatura para esta propriedade de conexão.</summary>
      <returns>Uma assinatura para esta propriedade de conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>Obtém ou define o cursor para gravar uma série sequencial de caracteres.</summary>
      <returns>O cursor para gravar uma série sequencial de caracteres.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>Fornece uma implementação <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> padrão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" />.</summary>
      <param name="resolver">A <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>Retorna um <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Um <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="type">O tipo da <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>Retorna um <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Um <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">O tipo da <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>Retorna o contexto do hub para essa conexão.</summary>
      <returns>O contexto do hub para essa conexão.</returns>
      <typeparam name="T">O tipo do hub.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>Retorna o contexto do hub para essa conexão de acordo com o nome especificado.</summary>
      <returns>O contexto do hub para essa conexão.</returns>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>Fornece métodos para proteger os dados.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" />.</summary>
      <param name="provider">O provedor de proteção de dados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>Protege os dados especificados.</summary>
      <returns>Os dados protegidos.</returns>
      <param name="data">Os dados a serem protegidos.</param>
      <param name="purpose">O propósito da proteção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>Remove a proteção dos dados especificados.</summary>
      <returns>Os dados desprotegidos.</returns>
      <param name="protectedValue">Os dados protegidos.</param>
      <param name="purpose">O propósito da proteção.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>Fornece métodos para proteção de dados.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>Protege os dados especificados.</summary>
      <returns>Os dados protegidos.</returns>
      <param name="data">Os dados a serem protegidos.</param>
      <param name="purpose">O propósito da proteção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>Remove a proteção dos dados especificados.</summary>
      <returns>Os dados desprotegidos.</returns>
      <param name="protectedValue">Os dados protegidos.</param>
      <param name="purpose">O propósito da proteção.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>Fornece uma interface que representa a instância que manipula o ACK (kit de certificação do aplicativo).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>Cria um novo objeto do ACK.</summary>
      <returns>O objeto do ACK criado.</returns>
      <param name="id">O identificador.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>Aciona um objeto do ACK especificado.</summary>
      <returns>O resultado da operação.</returns>
      <param name="id">O identificador do ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>Fornece acesso a hubs e referências e conexões persistentes.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>Retorna um <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Um <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> para a <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">O tipo da <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>Retorna as informações de hub associadas à conexão.</summary>
      <returns>As informações de hub associadas à conexão.</returns>
      <typeparam name="T">O tipo do hub.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>Retorna as informações de hub associadas à conexão.</summary>
      <returns>As informações de hub associadas à conexão.</returns>
      <param name="hubName">O nome do hub.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>Representa o auxiliar para as operações atômicas para variáveis que são compartilhadas por vários threads.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>Compara dois objetos para buscar igualdade de referência e saber se eles são iguais.</summary>
      <returns>verdadeiro se os dois objetos forem iguais; caso contrário, falso.</returns>
      <param name="location">O objeto de destino que será comparado com o termo de comparação e possivelmente substituído. </param>
      <param name="value">O objeto que substitui o objeto de destino caso a comparação resulte em igualdade.</param>
      <param name="comparandA">O primeiro termo de comparação.</param>
      <param name="comparandB">O segundo termo de comparação.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>Fecha o contador de desempenho e libera todos os recursos alocados por esta instância do contador de desempenho.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>Diminui em um os contadores de desempenho associados por meio de uma operação atômica eficiente.</summary>
      <returns>O valor do contador diminuído.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>Aumenta em um os contadores de desempenho associados por meio de uma operação atômica eficiente.</summary>
      <returns>O valor do contador aumentado.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>Aumenta ou diminui o valor dos contadores de desempenho associados em uma quantidade especificada por meio de uma operação atômica eficiente.</summary>
      <returns>O novo valor do contador.</returns>
      <param name="value">O valor no qual aumentar.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>Obtém uma amostra do contador e retorna o valor bruto, ou não calculado, desse contador.</summary>
      <returns>Uma amostra do contador e retorna o valor bruto, ou não calculado, desse contador.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>Obtém ou define o valor bruto, ou não calculado, deste contador.</summary>
      <returns>O valor bruto do contador.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>Exclui a instância da categoria especificada pela propriedade InstanceName do objeto PerformanceCounter.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>Fornece acesso aos contadores de desempenho.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Obtém o contador de desempenho que representa o número de mensagens recebidas por conexões (servidor para cliente) por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Obtém o contador de desempenho que representa o número total de mensagens recebidas por conexões (servidor para cliente) desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Obtém o contador de desempenho que representa o número de mensagens enviadas por conexões (cliente para servidor) por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Obtém o contador de desempenho que representa o número total de mensagens enviadas por conexões (cliente para servidor) desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>Obtém o contador de desempenho que representa o número total de eventos de conexão Connect desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>Obtém o contador de desempenho que representa o número de conexões atualmente conectadas.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>Obtém o contador de desempenho que representa o número total de eventos de conexão Disconnect desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>Obtém o contador de desempenho que representa o número total de eventos de conexão Reconnect desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>Obtém o contador de desempenho que representa o número de todos os erros processados por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de invocação de hub por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de invocação de hub processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de resolução de hub por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de resolução de hub processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de transporte por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de transporte processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inicializa os contadores de desempenho.</summary>
      <param name="instanceName">O nome de instância do host.</param>
      <param name="hostShutdownToken">O CancellationToken representando o encerramento do host.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Carrega um contador de desempenho.</summary>
      <param name="categoryName">O nome da categoria.</param>
      <param name="counterName">O nome do contador.</param>
      <param name="instanceName">O nome de instância.</param>
      <param name="isReadOnly">Se o contador é somente leitura.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Obtém o contador de desempenho representando o número de trabalhadores alocados para entregar mensagens no barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Obtém o contador de desempenho representando o número de trabalhadores atualmente ocupados entregando mensagens no barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Obtém o contador de desempenho representando o número de mensagens publicadas para o barramento de mensagem por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Obtém o contador de desempenho que representa o número total de mensagens publicadas para o barramento de mensagem desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Obtém o contador de desempenho que representa o número de mensagens recebidas por assinantes por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Obtém o contador de desempenho que representa o número de mensagens recebidas por assinantes desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Obtém o contador de desempenho representando o número atual de assinantes para o barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Obtém o contador de desempenho representando o número de novos assinantes para o barramento de mensagem por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Obtém o contador de desempenho que representa o número total de assinantes para o barramento de mensagem desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Obtém o contador de desempenho representando o número atual de tópicos no barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de escala por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de escala desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Obtém o contador de desempenho representando o número de mensagens recebidas pelo barramento de escala de mensagem por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Obtém o contador de desempenho representando o comprimento da fila de envio de escala atual.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Obtém o contador de desempenho representando o número de fluxos lógicos no barramento de mensagens de escala configurado atualmente, que estão no estado de buffer.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Obtém o contador de desempenho representando o número de fluxos lógicos no barramento de mensagens de escala configurado atualmente, que estão no estado aberto.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Obtém o contador de desempenho representando o número de fluxos lógicos no provedor de barramento de mensagem de escala configurado atualmente.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>Representa uma interface que fornece métodos para criptografar e descriptorgrafar dados associados à infraestrutura do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>Protege um dado especificado.</summary>
      <returns>Os dados protegidos.</returns>
      <param name="data">Os dados a serem protegidos.</param>
      <param name="purpose">O propósito da proteção.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>Retira a proteção de um dado específico.</summary>
      <returns>Os dados desprotegidos.</returns>
      <param name="protectedValue">O valor protegido a ser desprotegido.</param>
      <param name="purpose">O motivo da retirada da proteção.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>Gera uma ID do servidor</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>A ID do servidor.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>Fornece uma interface que representa uma classe que reduz o tamanho de uma cadeia de caracteres.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>Minimiza uma cadeia de caracteres de um modo que pode ser revertido por essa instância de <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" />.</summary>
      <returns>A representação minimizada do <paramref name="value" /> sem os seguintes caracteres:,|\</returns>
      <param name="value">A cadeia de caracteres a ser minimizada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>Uma chamada para essa função indica que qualquer tentativa futura de desfazer a minimização das cadeias de caracteres que foram anteriormente minimizadas do <paramref name="value" /> podem resultar em um valor de retorno nulo.Isso fornece uma oportunidade para apagar qualquer estrutura de dados interna que referencie <paramref name="value" />.</summary>
      <param name="value">A cadeia de caracteres que foi anteriormente minimizada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>Reserva uma chamada <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> que foi excluída anteriormente pelo menos uma vez nessa instância do <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> sem qualquer chamada subsequente para <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> compartilhar o mesmo argumento que a chamada <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> que retornou <paramref name="value" />.</summary>
      <returns>O argumento de todas as chamadas anteriores para <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> que retornou <paramref name="value" />.Se todas as chamadas para <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> nessa instância de <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> nunca retornaram <paramref name="value" /> ou se a chamada mais recente para <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> que retornou <paramref name="value" /> foi seguida de uma chamada para <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> compartilhando o mesmo argumento, <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" /> pode retornar nulo mas não deve lançar.</returns>
      <param name="value">Uma cadeia de caracteres minimizada que foi retornada por uma chamada anterior para <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Gerencia contadores de desempenho usando contadores de desempenho do Windows.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
      <param name="resolver">O resolvedor de dependência padrão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>Especifica o nome da categoria para este contador de desempenho.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Obtém o contador de desempenho que representa o número de mensagens recebidas por conexões (servidor para cliente) por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Obtém o contador de desempenho que representa o número total de mensagens recebidas por conexões (servidor para cliente) desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Obtém o contador de desempenho que representa o número de mensagens enviadas por conexões (cliente para servidor) por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Obtém o contador de desempenho que representa o número total de mensagens enviadas por conexões (cliente para servidor) desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>Obtém o contador de desempenho que representa o número total de eventos de conexão Connect desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>Obtém o contador de desempenho que representa o número de conexões atualmente conectadas.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>Obtém o contador de desempenho que representa o número total de eventos de conexão Disconnect desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>Obtém o contador de desempenho que representa o número total de eventos de conexão Reconnect desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>Obtém o contador de desempenho que representa o número de todos os erros processados por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de invocação de hub por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de invocação de hub processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de resolução de hub por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de resolução de hub processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de transporte por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de transporte processados desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Inicializa os contadores de desempenho.</summary>
      <param name="instanceName">O nome de instância do host.</param>
      <param name="hostShutdownToken">O CancellationToken representando o encerramento do host.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Carrega o contador de desempenho.</summary>
      <param name="categoryName">O nome da categoria.</param>
      <param name="counterName">O nome do contador.</param>
      <param name="instanceName">Um nome de instância.</param>
      <param name="isReadOnly">verdadeiro se o contador for somente leitura; caso contrário, falso.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Obtém o contador de desempenho representando o número de trabalhadores alocados para entregar mensagens no barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Obtém o contador de desempenho representando o número de trabalhadores atualmente ocupados entregando mensagens no barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Obtém o contador de desempenho representando o número de mensagens publicadas para o barramento de mensagem por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Obtém o contador de desempenho que representa o número total de mensagens publicadas para o barramento de mensagem desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Obtém o contador de desempenho que representa o número de mensagens recebidas por assinantes por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Obtém o contador de desempenho que representa o número de mensagens recebidas por assinantes desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Obtém o contador de desempenho representando o número atual de assinantes para o barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Obtém o contador de desempenho representando o número de novos assinantes para o barramento de mensagem por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Obtém o contador de desempenho que representa o número total de assinantes para o barramento de mensagem desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Obtém o contador de desempenho representando o número atual de tópicos no barramento de mensagem.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Obtém o contador de desempenho que representa o número de erros de escala por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Obtém o contador de desempenho que representa o número total de erros de escala desde o momento em que o aplicativo foi iniciado.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Obtém o contador de desempenho representando o número de mensagens recebidas pelo barramento de escala de mensagem por segundo.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Obtém o contador de desempenho representando o comprimento da fila de envio de escala atual.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Obtém o contador de desempenho representando o número de fluxos lógicos no barramento de mensagens de escala configurado atualmente, que estão no estado de buffer.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Obtém o contador de desempenho representando o número de fluxos lógicos no barramento de mensagens de escala configurado atualmente, que estão no estado aberto.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Obtém o contador de desempenho representando o número de fluxos lógicos no provedor de barramento de mensagem de escala configurado atualmente.</summary>
      <returns>Retorna <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>Especifica as constantes de propósitos.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>A constante ConnectionToken.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>A constante Groups.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>Especifica os comandos do servidor.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>O comando RemoveConnection.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>Implementação padrão de <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>Obtém ou define a ID do servidor.</summary>
      <returns>A ID do servidor.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>Representa um valor JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>Converte o valor de parâmetro para o <see cref="T:System.Type" /> especificado.</summary>
      <returns>O valor de parâmetro convertido.</returns>
      <param name="type">O <see cref="T:System.Type" /> ao qual converter o parâmetro.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>Converte o valor de parâmetro para o <see cref="T:System.Type" /> especificado.</summary>
      <returns>O valor de parâmetro convertido.</returns>
      <param name="type">O <see cref="T:System.Type" /> ao qual converter o parâmetro.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>Implementações tratam de sua própria serialização para JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>Serializa a si mesmo para JSON por meio de um <see cref="T:System.IO.TextWriter" /> .</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> que recebe o objeto JSON serializado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary> Extensões para <see cref="T:Newtonsoft.Json.JsonSerializer" /> . </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Desserializa o JSON para um objeto .NET.</summary>
      <returns>O objeto desserializado a partir da cadeia JSON.</returns>
      <param name="serializer">O serializador</param>
      <param name="jsonBuffer">O buffer do JSON a ser desserializado</param>
      <param name="encoding">A codificação a ser usada.</param>
      <typeparam name="T">O <see cref="T:System.Type" /> do objeto que está sendo desserializado.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>Desserializa o JSON para um objeto .NET.</summary>
      <returns>O objeto desserializado a partir da cadeia JSON.</returns>
      <param name="serializer">O serializador</param>
      <param name="json">O JSON a ser desserializado</param>
      <typeparam name="T">O <see cref="T:System.Type" /> do objeto que está sendo desserializado.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>Serializa o objeto especificado para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="serializer">O serializador JSON</param>
      <param name="value">O objeto a ser serializado</param>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> para o qual serializar o objeto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>Serializa o objeto especificado para uma cadeia JSON.</summary>
      <returns>Uma representação de cadeia JSON do objeto.</returns>
      <param name="serializer">O serializador</param>
      <param name="value">O objeto a ser serializado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> Classe auxiliar para operações JSON comuns. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>Converte o nome especificado para concatenação com maiúsculas e minúsculas.</summary>
      <returns>O valor de concatenação com maiúsculas e minúsculas do <paramref name="name" /> especificado.</returns>
      <param name="name">O valor a ser convertido.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>Cria uma instância <see cref="T:Newtonsoft.Json.JsonSerializer" /> com a configuração padrão.</summary>
      <returns>O <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> recém-criado.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>Cria uma instância <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> padrão.</summary>
      <returns>O <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> recém-criado.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>Cria um retorno de chamada JSONP.</summary>
      <returns>Um <see cref="T:System.String" /> que representa o retorno de chamada.</returns>
      <param name="callback">O retorno de chamada a ser criado.</param>
      <param name="payload">A carga.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Obtém o tipo MIME para o JavaScript.</summary>
      <returns>O tipo MIME para o JavaScript.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>Obtém o tipo MIME deste utilitário JSON.</summary>
      <returns>Obtém o tipo MIME deste utilitário JSON.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>Representa os comandos em uso com o sistema de mensagens do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>Obtém ou define o tipo de comandos.</summary>
      <returns>O tipo de comandos.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>Obtém ou define o identificador de comando.</summary>
      <returns>O identificador de comando.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>Obtém ou define o valor do comando.</summary>
      <returns>O valor do comando.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>Obtém ou define se o comando aguarda a certificação antes da execução.</summary>
      <returns>verdadeiro se o comando aguardar a certificação antes da execução; caso contrário, falso.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>Enumera os comandos para a mensagem de conexão.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>Especifica o comando para inicializar a conexão.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>Fornece métodos usados para publicar em mensagens e assiná-las a partir do barramento de mensagem do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Estabelece uma assinatura de tópico para o assinante no barramento de mensagem.</summary>
      <returns>O estado da assinatura.</returns>
      <param name="subscriber">O assinante.</param>
      <param name="cursor">O cursor de leitura que indica trabalho para a assinatura.</param>
      <param name="callback">A função do retorno de chamada.</param>
      <param name="maxMessages">O tamanho do buffer de mensagem.</param>
      <param name="state">O estado da operação de retorno de chamada.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>Fornece detalhes sobre o assinante no barramento de mensagem do SignalR.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>Obtém ou define a assinatura.</summary>
      <returns>A assinatura.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>Obtém ou define o cursor de gravação.</summary>
      <returns>O cursor de gravação.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>Fornece métodos para realizar o trabalho e controlar o status da assinatura.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>Obtém ou define a identidade da assinatura.</summary>
      <returns>A identidade da assinatura.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>Define a assinatura para o estado de trabalho.</summary>
      <returns>verdadeiro se a assinatura foi definida para o estado de trabalho; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>Define a assinatura para o estado ocioso.</summary>
      <returns>verdadeiro se a assinatura foi definida para o estado ocioso; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>Realiza trabalho na mensagem assinada por meio desta assinatura.</summary>
      <returns>A tarefa que representa a operação na mensagem assinada.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" />.</summary>
      <param name="key">A chave associada ao evento local.</param>
      <param name="id">O identificador associado às informações da chave.</param>
      <param name="store">O repositório de mensagens associado à chave do evento local.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>Obtém ou define o identificador associado às informações da chave.</summary>
      <returns>O identificador associado às informações da chave.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>Obtém ou define a chave associada ao evento local.</summary>
      <returns>A chave associada ao evento local.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>Obtém a mensagem para a chave.</summary>
      <returns>A mensagem para a chave.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
      <param name="source">A origem da mensagem.</param>
      <param name="key">A mensagem da chave.</param>
      <param name="value">O valor da mensagem.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>Obtém ou define o identificador de comando da mensagem.</summary>
      <returns>O identificador de comando da mensagem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>A codificação da mensagem</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>Obtém ou define o filtro de mensagem.</summary>
      <returns>O filtro de mensagem.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>Obtém ou define um valor que indica se a mensagem é uma mensagem de confirmação.</summary>
      <returns>verdadeiro se a mensagem for uma mensagem de confirmação; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>Obtém um valor que indica se a mensagem é uma mensagem de comando.</summary>
      <returns>verdadeiro se a mensagem for uma mensagem de comando; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>Obtém ou define a chave para a mensagem.</summary>
      <returns>A chave para a mensagem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>A ID da carga.Apenas usada em cenários de escala</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>Obtém ou define a origem da mensagem.</summary>
      <returns>A origem da mensagem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>O índice do fluxo de onde esta mensagem veio.Apenas usado em cenários de escala.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>Obtém ou define o valor da mensagem.</summary>
      <returns>O valor da mensagem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>Obtém ou define um valor que indica se a mensagem aguarda confirmação.</summary>
      <returns>verdadeiro se a mensagem aguardar confirmação; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>Agenda o trabalho a ser feito para uma determinada assinatura e tem um algoritmo para escolher o número de trabalhadores (threads de pool de thread), para tratar do trabalho agendado.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="performanceCounterManager">O gerenciador do contador de desempenho.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>Libera todos os recursos usados pelo <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>Libera todos os recursos usados pelo <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>As agendas funcionam na assinatura especificada.</summary>
      <param name="subscription">A assinatura a ser agendada.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>Obtém ou define a origem de rastreamento do agente.</summary>
      <returns>A origem de rastreamento do agente.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>Representa o barramento de mensagem para o SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Cria uma nova assinatura para o assinante.</summary>
      <returns>A assinatura recém-criada.</returns>
      <param name="subscriber">O assinante.</param>
      <param name="cursor">O cursor de leitura que indica trabalho para a assinatura.</param>
      <param name="callback">A função do retorno de chamada.</param>
      <param name="messageBufferSize">O tamanho do buffer de mensagem.</param>
      <param name="state">O estado da operação de retorno de chamada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Estabelece uma assinatura de tópico para o assinante no barramento de mensagem.</summary>
      <returns>O estado da assinatura.</returns>
      <param name="subscriber">O assinante.</param>
      <param name="cursor">O cursor de leitura que indica trabalho para a assinatura.</param>
      <param name="callback">A função do retorno de chamada.</param>
      <param name="maxMessages">O tamanho do buffer de mensagem.</param>
      <param name="state">O estado da operação de retorno de chamada.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>Obtém a origem de rastreamento usada para rastrear a execução do código.</summary>
      <returns>A origem de rastreamento usada para rastrear a execução do código.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>Fornece métodos de extensão para o barramento de mensagem do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>Enumera as mensagens.</summary>
      <param name="messages">A lista que contém as mensagens a serem enumeradas.</param>
      <param name="filter">O método que filtra as mensagens que estão sendo enumeradas.</param>
      <param name="onMessage">O método que lida com cada mensagem que está sendo enumerada.</param>
      <param name="state">O objeto que representa o estado da operação.</param>
      <typeparam name="T">O tipo do parâmetro <paramref name="state" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>Representa o resultado de uma mensagem.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="terminal">verdadeiro para indicar que este é um resultado de uma mensagem de terminal; caso contrário, falso.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="messages">A matriz de mensagens associadas com esse <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</param>
      <param name="totalCount">A quantidade de mensagens populadas na matriz de mensagens.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>Obtém uma <see cref="T:System.Collections.Generic.IList`1" /> associada ao resultado.</summary>
      <returns>Uma <see cref="T:System.Collections.Generic.IList`1" /> associada ao resultado.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>Obtém ou define um valor que indica se este é um resultado de uma mensagem de terminal.</summary>
      <returns>verdadeiro se este for um resultado de uma mensagem de terminal; caso contrário, falso.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>Especifica se este é um resultado de uma mensagem de terminal.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>Obtém ou define a quantidade de mensagens populadas na matriz de mensagens.</summary>
      <returns>A quantidade de mensagens populadas na matriz de mensagens.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>Representa um repositório de mensagens que é respaldado por um buffer de anel.</summary>
      <typeparam name="T">O tipo dos elementos no repositório.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> com a capacidade especificada.</summary>
      <param name="capacity">A capacidade mínima do repositório.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />.</summary>
      <param name="capacity">A capacidade mínima do repositório.</param>
      <param name="offset">O deslocamento da primeira mensagem no repositório.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>Adiciona uma mensagem ao repositório e retorna a ID da mensagem recém-adicionada.</summary>
      <returns>A ID da mensagem recém-adicionada.</returns>
      <param name="message">A mensagem a ser adicionada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>Obtém o número de mensagens no repositório.</summary>
      <returns>O número de mensagens no repositório.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>Obtém o próximo lote de mensagens, começando com a ID especificada. </summary>
      <returns>O próximo lote de mensagens</returns>
      <param name="firstMessageId">A ID da primeira mensagem.</param>
      <param name="maxMessages">O número máximo de mensagens a retornar.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>Representa o resultado associado ao armazenamento de mensagem.</summary>
      <typeparam name="T">O tipo do resultado.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" />.</summary>
      <param name="firstMessageId">O identificador da primeira mensagem.</param>
      <param name="messages">A mensagem associada ao resultado.</param>
      <param name="hasMoreData">verdadeiro se o resultado contiver mais dados; caso contrário, falso.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>Obtém o identificador da primeira mensagem.</summary>
      <returns>O identificador da primeira mensagem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>Obtém se o resultado contiver mais dados.</summary>
      <returns>verdadeiro se o resultado contiver mais dados; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>Obtém a mensagem associada ao resultado.</summary>
      <returns>A mensagem associada ao resultado.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>Representa as configurações comuns para para implementações escaláveis de barramento de mensagens.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>A fila está desativada atualmente.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>Obtém ou define o comprimento máximo da fila de envio posterior.</summary>
      <returns>O comprimento máximo da fila de envio posterior.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>Representa a classe de base comum para implementações de barramento de mensagem escalável.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">O índice do fluxo a ser fechado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>Fecha a fila especificada para envio de mensagens, fazendo com que todos os envios falhem de maneira assíncrona.</summary>
      <param name="streamIndex">O índice do fluxo a ser fechado.</param>
      <param name="exception">O erro que ocorreu.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>Invocado quando uma carga é recebida do backplane.Deve haver somente uma chamada ativa de cada vez.</summary>
      <param name="streamIndex">ID do fluxo.</param>
      <param name="id">ID da carga dentro desse fluxo.</param>
      <param name="message">A mensagem escalável.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">O índice do fluxo a ser aberto.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>Publica uma mensagem a partir do bus de mensagem da expansão.</summary>
      <returns>Uma tarefa que representa a operação para publicar uma mensagem.</returns>
      <param name="message">A mensagem a ser publicada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Envia as mensagens do bus de mensagens de expansão do SignalR.</summary>
      <returns>Uma tarefa que representa a operação para enviar uma mensagem.</returns>
      <param name="messages">As mensagens a serem enviadas.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>O número de fluxos não pode alterar durante a vida útil dessa instância.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>Representa uma assinatura expandida.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" />.</summary>
      <param name="identity">A identidade da assinatura.</param>
      <param name="eventKeys">As chaves de evento para a assinatura.</param>
      <param name="cursor">O cursor de gravação.</param>
      <param name="streams">Os fluxos usados para associar a cursores de gravação.</param>
      <param name="callback">A função de retorno de chamada que é executada quando o estado da assinatura muda.</param>
      <param name="maxMessages">O número máximo de mensagens alocadas para esta assinatura.</param>
      <param name="counters">O objeto usado para acessar os contadores de desempenho da assinatura.</param>
      <param name="state">O estado da assinatura.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>Grava o cursor usando o gravador de texto especificado.</summary>
      <param name="textWriter">O gravador de texto usado para gravar o cursor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>Representa uma implementação de uma classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" />.</summary>
      <param name="identity">A identidade da assinatura.</param>
      <param name="eventKeys">A lista que contém as chaves de evento para a assinatura.</param>
      <param name="callback">A função de retorno de chamada que é executada quando o estado da assinatura muda.</param>
      <param name="maxMessages">O número máximo de mensagens alocadas para esta assinatura.</param>
      <param name="counters">O objeto usado para acessar os contadores de desempenho da assinatura.</param>
      <param name="state">O estado da assinatura.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>Obtém ou define o método usado para descartar os recursos da assinatura.</summary>
      <returns>O método usado para descartar os recursos da assinatura.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>Grava o cursor usando o gravador de texto especificado.</summary>
      <param name="textWriter">O gravador de texto usado para gravar o cursor.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>Representa o tópico no barramento de mensagem do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" />.</summary>
      <param name="storeSize">O tamanho do repositório de mensagens.</param>
      <param name="lifespan">O tempo de vida do tópico.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Adiciona a assinatura especificada à lista.</summary>
      <param name="subscription">A assinatura a ser adicionada.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>Obtém um valor que indica se o tópico expirou.</summary>
      <returns>verdadeiro se o tópico tiver expirado; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>Obtém ou define a última vez que a assinatura foi usada.</summary>
      <returns>A última vez que a assinatura foi usada.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Exclui a assinatura especificada da lista.</summary>
      <param name="subscription">A assinatura a ser excluída.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>Obtém ou define o repositório de mensagens.</summary>
      <returns>O repositório de mensagens.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>Obtém ou define o objeto usado para bloquear o tópico.</summary>
      <returns>O objeto usado para bloquear o tópico.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>Obtém ou define a lista que contém as assinaturas de tópico.</summary>
      <returns>A lista que contém as assinaturas de tópico.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>Representa uma coleção de tópicos usada como uma pesquisa.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>Remove todos os tópicos da coleção.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>Determina se o tópico com a chave especificada está contido na coleção.</summary>
      <returns>verdadeiro se o tópico com a chave especificada estiver contido na coleção. Caso contrário, falso.</returns>
      <param name="key">A chave do tópico.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>Obtém o número de todos os tópicos (gerais e de grupo) na coleção.</summary>
      <returns>O número de todos os tópicos (gerais e de grupo) na coleção.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>Obtém um enumerador que itera por meio da coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>Adiciona um tópico à coleção usando a função especificada, se a chave não existir.</summary>
      <returns>O tópico gerado para a chave especificada.</returns>
      <param name="key">A chave do tópico a ser adicionado.</param>
      <param name="factory">A função usada para gerar o tópico para a chave.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>Obtém o tópico com a chave especificada.</summary>
      <returns>O tópico com a chave especificada, se encontrado; nulo se o tópico não for encontrado.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtém um enumerador que itera por meio da coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>Tenta obter o tópico com a chave especificada da coleção.</summary>
      <returns>verdadeiro se a chave foi encontrada; caso contrário, falso.</returns>
      <param name="key">A chave a ser obtida.</param>
      <param name="topic">Quando esse método retorna, contém o tópico recuperado.Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>Tenta remover e retornar o tópico que tem a chave especificada da coleção.</summary>
      <returns>O tópico removido.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>Representa uma solicitação do servidor.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" />.</summary>
      <param name="environment">O ambiente.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>Obtém os cookies associados ao servidor.</summary>
      <returns>Os cookies associados ao servidor.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>Obtém os cabeçalhos associados à solicitação.</summary>
      <returns>Os cabeçalhos associados à solicitação.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>Obtém a coleção de variáveis de cadeia de caracteres de consulta do servidor.</summary>
      <returns>A coleção de variáveis de cadeia de caracteres de consulta do servidor.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>Obtém informações sobre a URL da solicitação atual.</summary>
      <returns>Um objeto <see cref="T:System.Uri" /> contendo informações sobre a URL da solicitação atual.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>Obtém o usuário deste servidor.</summary>
      <returns>O usuário deste servidor.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>Representa um feedback em resposta à solicitação.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" />.</summary>
      <param name="environment">O ambiente.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>Obtém o token de cancelamento associado à resposta.</summary>
      <returns>O token de cancelamento associado à resposta.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>Obtém ou define o tipo do conteúdo associado à resposta.</summary>
      <returns>O tipo do conteúdo associado à resposta.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>Libera esta instância.</summary>
      <returns>A instância liberada.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Grava a resposta usando o segmento de matriz associado.</summary>
      <param name="data">O segmento da matriz.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>Representa o middleware para a conexão persistente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>Representa uma interface que fornece propriedades para rastrear a execução de código.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>Obtém a <see cref="T:System.Diagnostics.TraceSource" /> com o nome especificado para a origem.</summary>
      <returns>A <see cref="T:System.Diagnostics.TraceSource" /> com o nome especificado para a origem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>Obtém a alternância que controla o rastreamento da execução do código e saída de depuração.</summary>
      <returns>O objeto <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>Fornece propriedades que permitem rastrear a execução de códigos.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>Obtém a <see cref="T:System.Diagnostics.TraceSource" /> com o nome especificado para a origem.</summary>
      <returns>A <see cref="T:System.Diagnostics.TraceSource" /> com o nome especificado para a origem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>Obtém a alternância que controla o rastreamento da execução do código e saída de depuração.</summary>
      <returns>O objeto <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Representa um transporte de quadro infinito.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="resolver">O resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicializa o objeto de resposta.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> que representa a operação de resposta de inicialização.</returns>
      <param name="connection">A conexão do transporte.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>Mantém a conexão ativa.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> que representa a operação de atividade.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>Obtém o gravador de texto HTML que grava a resposta de contexto para o fluxo de saída.</summary>
      <returns>O gravador de texto HTML que grava a resposta de contexto para o fluxo de saída.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Envia a resposta de contexto especificada.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> que representa a operação de envio.</returns>
      <param name="response">A resposta a ser enviada.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="resolver">O resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="jsonSerializer">O jsonSerializer.</param>
      <param name="heartbeat">A pulsação do transporte.</param>
      <param name="performanceCounterWriter">O gravador do contador de desempenho.</param>
      <param name="traceManager">O gerenciador do rastreamento.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>Obtém ou define a função de conexão para o <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>A função de conexão para o <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Fornece operação de enfileiramento para os transportes.</summary>
      <returns>A operação de enfileiramento para os transportes.</returns>
      <param name="writeAsync">Grava de maneira assíncrona.</param>
      <param name="state">O objeto de estado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>Inicializa o estado persistente do transporte permanente.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicializa a resposta da conexão para o transporte permanente.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">A conexão do transporte.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>Obtém o JsonSerializer para o transporte permanente.</summary>
      <returns>O JsonSerializer para o transporte permanente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>Obtém a última ID de mensagem para o transporte permanente.</summary>
      <returns>A última ID de mensagem para o transporte permanente.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>Fornece a carga para um transporte em envio.</summary>
      <param name="payload">A carga da cadeia de caracteres.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Fornece uma resposta para os métodos em envio.</summary>
      <param name="response">A resposta a uma conexão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Fornece uma conexão para processar a solicitação.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">A conexão do transporte.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Fornece uma solicitação para processar a conexão para o transporte.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">A conexão do transporte.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>Obtém ou define uma função a receber para o transporte permanente.</summary>
      <returns>A função a receber para o transporte permanente.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>Obtém ou define a função reconectada para o transporte permanente.</summary>
      <returns>A função reconectada para o transporte permanente.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Envia uma resposta a uma conexão para o transporte permanente.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="response">A resposta persistente.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>Envia um objeto para o transporte permanente.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="value">O valor a ser enviado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>Obtém ou define o transporte conectado para o <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>O transporte conectado para o <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary> Representa uma conexão que pode ser rastreada por um <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" /> . </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> Aplica um novo estado à conexão. </summary>
      <param name="states">Um dos valores de enumeração de <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>Representa um transporte que comunica</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>Obtém ou define um retorno de chamada que é invocado quando a conexão inicial é conectada ao transporte.</summary>
      <returns>Retorna <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>Obtém ou define a ID de conexão para o transporte.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>Obtém ou define um retorno de chamada que é invocado quando o transporte desconecta.</summary>
      <returns>Retorna <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Processa a <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> especificada para esse transporte.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que é concluída quando o transporte termina o processamento da conexão.</returns>
      <param name="connection">A <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> a ser processada.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>Obtém ou define um retorno de chamada que é invocado quando o transporte recebe dados.</summary>
      <returns>Retorna <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>Obtém ou define um retorno de chamada que é invocado quando o transporte reconecta.</summary>
      <returns>Retorna <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>Envia dados por meio do transporte.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> que é concluída quando o envio é concluído.</returns>
      <param name="value">O valor a ser enviado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>Obtém ou define um retorno de chamada que é invocado quando o transporte conecta.</summary>
      <returns>Retorna <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>Representa o transporte para a conexão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Recebe dados de assinatura do transporte.</summary>
      <returns>Os dados de assinatura do transporte.</returns>
      <param name="messageId">A ID da mensagem para a assinatura.</param>
      <param name="callback">O método que lida com a mensagem recebida.</param>
      <param name="maxMessages">O tamanho do buffer de mensagem.</param>
      <param name="state">O estado da conexão de transporte.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>Gerencia o rastreamento do estado de conexões.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Adiciona uma nova conexão à lista de conexões rastreadas.</summary>
      <returns>A conexão que foi substituída, se houver.</returns>
      <param name="connection">A conexão a ser adicionada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>Obtém uma lista de conexões que estão sendo rastreadas.</summary>
      <returns>Uma lista de conexões.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Marca uma conexão existente como ativa.</summary>
      <param name="connection">A conexão a marcar.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Remove uma conexão da lista de conexões rastreadas.</summary>
      <param name="connection">A conexão a remover.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>Gerencia os transportes para conexões.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Obtém o transporte especificado para o <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> especificado.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> para o <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> especificado.</returns>
      <param name="hostContext">O <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> para a solicitação atual.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>Determina se o transporte especificado é suportado.</summary>
      <returns>Verdade se o transporte for suportado, caso contrário, Falso.</returns>
      <param name="transportName">O nome do transporte a testar.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="resolver">O resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>Obtém ou define a função conectada.</summary>
      <returns>A função conectada.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>Obtém o limite de desconexão.</summary>
      <returns>O limite de desconexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>Obtém um valor que indica se o transporte é uma solicitação de conexão.</summary>
      <returns>verdadeiro se o transporte for uma solicitação de conexão; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Processa a solicitação de conexão.</summary>
      <returns>A tarefa que representa a operação da solicitação.</returns>
      <param name="connection">A conexão a processar.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>Obtém ou define a função recebida.</summary>
      <returns>A função recebida.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>Obtém ou define o transporte reconectado.</summary>
      <returns>A tarefa que reconecta o transporte.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Envia uma resposta para o transporte.</summary>
      <returns>A tarefa que representa a operação para enviar uma resposta.</returns>
      <param name="response">A resposta a ser enviada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>Envia um transporte de sondagem longa com um determinado valor.</summary>
      <returns>A tarefa que representa a operação para enviar um transporte de sondagem longa.</returns>
      <param name="value">O valor.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>Obtém um valor que indica se o transporte dá suporte a keep alive.</summary>
      <returns>verdadeiro se o transporte der suporte a keep alive; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>Obtém ou define o transporte conectado.</summary>
      <returns>A tarefa que conecta o transporte.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> Representa uma resposta a uma conexão. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>Cria uma nova instância de <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="exclude">Um filtro que determina se as mensagens devem ser gravadas para o cliente.</param>
      <param name="writeCursor">O gravador de ponteiro.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>Obtém ou define um valor que indica se a conexão foi fechada à força.</summary>
      <returns>verdadeiro se a conexão foi fechada à força; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>Obtém ou define um valor que indica se a conexão recebe um comando de desconexão.</summary>
      <returns>verdadeiro se a conexão recebe um comando de desconexão; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>Obtém ou define um token assinado que representa a lista de grupos.</summary>
      <returns>Os grupos do token.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>Verdadeiro se a conexão estiver em processo de inicialização</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>Obtém ou define o tempo em que o cliente que realiza pesquisa longa deve esperar antes de restabelecer uma conexão caso não receba dados.</summary>
      <returns>O tempo em que o cliente que realiza pesquisa longa deve esperar antes de restabelecer uma conexão caso não receba dados.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>Obtém ou define a lista de mensagens a serem enviadas à conexão de entrada.</summary>
      <returns>A lista de mensagens a serem enviadas à conexão de entrada.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>Serializa somente os componentes necessários do <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" /> para JSON usando JsonTextWriter do Json.NET para melhorar o desempenho.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> que recebe a serialização JSON.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>Verdadeiro se o cliente tentar se reconectar.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>Obtém ou define a contagem total de mensagens enviadas na conexão de entrada.</summary>
      <returns>A contagem total de mensagens enviadas na conexão de entrada.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>Fornece o transporte para enviar eventos do servidor do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="resolver">O resolvedor IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Inicializa uma resposta para a <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</summary>
      <returns>A resposta de inicialização para a <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</returns>
      <param name="connection">A inicialização da conexão de transporte.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>Retorna um método de atividade para tornar uma conexão persistente para o recurso de Internet.</summary>
      <returns>Um método de atividade para tornar uma conexão persistente para o recurso de Internet.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Envia uma resposta persistente para o <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <returns>Uma resposta persistente para enviar ao <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</returns>
      <param name="response">A resposta persistente.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>Enumera o atributo do TransportConnectionState.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>A conexão anulada do estado.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>A conexão adicionada do estado.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>A conexão desconectada do estado.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>A mensagem de desconexão recebida do estado.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>A conexão descartada do estado.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>A solicitação HTTP encerrada do estado da conexão.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>O estado sem conexão.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>A fila drenada do estado da conexão.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>A conexão removida do estado.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>A conexão substituída do estado.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="heartbeat">A pulsação do transporte.</param>
      <param name="performanceCounterManager">O gerenciador do contador de desempenho.</param>
      <param name="traceManager">O gerenciador do rastreamento.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>Anula o processo de tarefa atual para o <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>O processo de tarefa atual a ser anulado para o <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>Anula o processo de processo de tarefa atual para o <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>O processo de tarefa atual a ser anulado para o <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
      <param name="clean">Indica se todas as tarefas devem ser limpas no processo anulado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>Aplica o estado da conexão de transporte para a base de desconexão.</summary>
      <param name="states">Os estados da conexão de transporte.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>Obtém um token de cancelamento que representa vida útil da conexão.</summary>
      <returns>Um token de cancelamento que representa a vida útil da conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>Obtém ou define a conexão de transporte para a base de desconexão de transporte.</summary>
      <returns>A conexão de transporte para a base de desconexão de transporte.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>Obtém a conexão para encerrar a operação para este token.</summary>
      <returns>A conexão para encerrar a operação para este token.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>Obtém ou define a ID da conexão.</summary>
      <returns>Uma cadeia de caracteres contendo a ID da conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>Obtém o contexto do host associado à base de desconexão de transporte.</summary>
      <returns>O contexto do host associado à base de desconexão de transporte.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>Representa um gravador para criar uma resposta para a base de desconexão de transporte.</summary>
      <returns>Um gravador para criar uma resposta para a base de desconexão de transporte.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>Faz a conexão ser desconectada.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>Obtém ou define a propriedade desconectada para os transportes de conexão.</summary>
      <returns>A propriedade desconectada para os transportes de conexão.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>Obtém o intervalo de tempo a aguardar depois que a conexão falha, antes de disparar a desconexão da conexão.</summary>
      <returns>Retorna <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>Libera todos os recursos usados ​​pela instância atual da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela classe de <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>Finaliza a conexão.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>Representa o objeto para encerrar a operação de fila.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="writeAsync">Grava de maneira assíncrona.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Representa o objeto para encerrar a operação de fila.</summary>
      <returns>O objeto que representa o fim da operação de fila.</returns>
      <param name="writeAsync">Grava de maneira assíncrona.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>Obtém a pulsação do transporte para gerenciar o estado do acompanhamento das conexões.</summary>
      <returns>A pulsação do transporte para gerenciar o estado do acompanhamento das conexões.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>Incrementa os erros para a base de desconexão de transporte.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>Inicializa o estado persistente para a base de desconexão de transporte.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>Obtém um valor que representa se a conexão faz uma solicitação para anular.</summary>
      <returns>verdadeiro se a conexão fizer uma solicitação para anular; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>Obtém um valor que representa se a conexão está ativa.</summary>
      <returns>verdadeiro se a conexão estiver ativa; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>Obtém um valor que representa se as conexões fazem uma solicitação.</summary>
      <returns>verdadeiro se as conexões fizerem uma solicitação; caso contrário, falso.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>Obtém um valor que representa se a conexão está encerrada.</summary>
      <returns>verdadeiro se a conexão tiver esgotado o tempo limite; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>Envia um ping de atividade via conexão.</summary>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>Obtém o gravador de saída que pode gravar uma série sequencial de caracteres.</summary>
      <returns>O gravador de saída que pode gravar uma série sequencial de caracteres.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>Obtém um valor que representa se o transporte dá suporte a keep alive.</summary>
      <returns>verdadeiro se o transporte der suporte a keep alive; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>Faz a conexão desconectar no tempo limite.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>Obtém a origem para rastrear a execução do código e associar mensagens de rastreamento à sua origem.</summary>
      <returns>A origem para rastrear a execução do código e associar mensagens de rastreamento à sua origem.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>Obtém o URI da conexão.</summary>
      <returns>O URI da conexão.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>Representa uma implementação padrão de <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
      <param name="resolver">A <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Adiciona uma nova conexão à lista de conexões rastreadas.</summary>
      <param name="connection">A conexão a ser adicionada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>Libera todos os recursos usados ​​pela instância atual da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela classe de <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>Obtém uma lista de conexões que estão sendo rastreadas.</summary>
      <returns>Uma lista de conexões.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Marca uma conexão existente como ativa.</summary>
      <param name="connection">A conexão a marcar.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Remove uma conexão da lista de conexões rastreadas.</summary>
      <param name="connection">A conexão a remover.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>A implementação padrão de <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" />.</summary>
      <param name="resolver">O <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> padrão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Obtém o transporte especificado para o <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> especificado.</summary>
      <returns>O <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> para o <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> especificado.</returns>
      <param name="hostContext">O <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> para a solicitação atual.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>Adiciona um novo transporte à lista de transportes suportados.</summary>
      <param name="transportName">O transporte especificado.</param>
      <param name="transportFactory">O método de fábrica para o transporte especificado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>Remove um transporte da lista de transportes suportados.</summary>
      <param name="transportName">O transporte especificado.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>Determina se o transporte especificado é suportado.</summary>
      <returns>Verdade se o transporte for suportado, caso contrário, Falso.</returns>
      <param name="transportName">O nome do transporte a testar.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>Nenhum conteúdo aqui será atualizado; não adicione material aqui.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" />.</summary>
      <param name="context">O contexto do host.</param>
      <param name="resolver">O resolvedor de dependência.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>Obtém o token de cancelamento usado para o transporte.</summary>
      <returns>O token de cancelamento usado para o transporte.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>Obtém um valor que indica se o transporte está ativo.</summary>
      <returns>verdadeiro se o transporte estiver ativo; caso contrário, falso.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>Mantém o transporte ativo.</summary>
      <returns>A tarefa que mantém o transporte ativo.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Processa uma solicitação de conexão.</summary>
      <returns>A tarefa que representa a operação para solicitar uma conexão.</returns>
      <param name="connection">A conexão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Envia uma resposta de soquete da Web.</summary>
      <returns>A tarefa que representa a operação para enviar uma resposta.</returns>
      <param name="response">A resposta a ser enviada.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>Envia um valor do transporte.</summary>
      <returns>A tarefa que representa a operação para enviar um valor do transporte.</returns>
      <param name="value">O valor a ser enviado.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>Representa uma instância que gerencia soquetes da Web do SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>Encerra esta instância.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>Obtém ou define o erro durante o manuseio do soquete da Web.</summary>
      <returns>O erro durante o manuseio do soquete da Web.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>Obtém o tamanho máximo da mensagem de entrada.</summary>
      <returns>O tamanho máximo da mensagem de entrada.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>Ocorre quando esta instância é fechada.</summary>
      <param name="clean">verdadeiro para limpar os rastreamentos.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>Gera um evento quando um erro ocorre durante a operação do manipulador.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>Gera um evento quando a mensagem é recebida.</summary>
      <param name="message">A mensagem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>Gera um evento quando a mensagem é recebida.</summary>
      <param name="message">A mensagem.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>Gera um evento quando esta instância é aberta.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>Processa de maneira assíncrona a solicitação recebida pelo manipulador.</summary>
      <returns>O resultado da operação.</returns>
      <param name="webSocket">O soquete da Web.</param>
      <param name="disconnectToken">O token de desconexão.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>Envia uma mensagem associada ao manipulador.</summary>
      <returns>A mensagem enviada.</returns>
      <param name="message">A mensagem a ser enviada.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>Obtém ou define o soquete da Web.</summary>
      <returns>O soquete da Web.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Representa a conexão para as extensões do Owin.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>Mapeia os hubs de SignalR ao pipeline do construtor de aplicativos em "/signalr”.</summary>
      <returns>Retorna <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">O construtor de aplicativos.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Mapeia os hubs de SignalR ao pipeline do construtor de aplicativos em "/signalr”.</summary>
      <returns>Retorna <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="configuration">
        <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> a usar </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>Mapeia o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> do SignalR especificado para o pipeline do construtor do aplicativo no caminho especificado. </summary>
      <returns>Retorna <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="path">  O caminho para mapear o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <typeparam name="TConnection">O tipo do <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Mapeia o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> do SignalR especificado para o pipeline do construtor do aplicativo no caminho especificado. </summary>
      <returns>Retorna <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="path">O caminho para mapear a conexão persistente.</param>
      <param name="configuration">O <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> a ser usado. </param>
      <typeparam name="TConnection">O tipo do <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Mapeia os hubs de SignalR ao pipeline do construtor de aplicativos no caminho especificado.</summary>
      <returns>Retorna <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="path">O caminho para mapear hubs de signalr.</param>
      <param name="configuration">O <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> a ser usado. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Mapeia o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> especificado para o pipeline do construtor do aplicativo no caminho especificado. </summary>
      <returns>Retorna <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="path">O caminho para mapear a conexão persistente.</param>
      <param name="connectionType">O tipo do <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <param name="configuration">O <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> a ser usado. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>Adiciona hubs de SignalR ao pipeline do construtor de aplicativos.</summary>
      <param name="builder">O construtor de aplicativos.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>Adiciona o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> do SignalR especificado ao construtor de aplicativos. </summary>
      <param name="builder">O construtor de aplicativos</param>
      <typeparam name="TConnection">O tipo do <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">O construtor de aplicativos.</param>
      <param name="configuration">O <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> a ser usado.</param>
      <typeparam name="TConnection">  Adiciona o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> do SignalR especificado ao construtor de aplicativos. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Adiciona hubs de SignalR ao pipeline do construtor de aplicativos.</summary>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="configuration">O <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> a ser usado. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Adiciona o <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> do SignalR especificado ao construtor de aplicativos. </summary>
      <param name="builder">O construtor de aplicativos.</param>
      <param name="connectionType">O tipo do <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
      <param name="configuration">O <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> a ser usado. </param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>